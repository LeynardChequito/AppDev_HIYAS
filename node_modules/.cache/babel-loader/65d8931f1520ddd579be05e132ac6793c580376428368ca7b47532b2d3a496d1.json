{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'login',\n  data() {\n    return {\n      mobile_or_email: '',\n      password: '',\n      errors: {\n        mobile_or_email: '',\n        password: ''\n      },\n      showPassword: false\n    };\n  },\n  methods: {\n    async login() {\n      // Clear previous error messages\n      this.errors.mobile_or_email = '';\n      this.errors.password = '';\n\n      // Perform validation\n      if (!this.mobile_or_email) {\n        this.errors.mobile_or_email = 'Mobile or Email is required.';\n      }\n      if (!this.password) {\n        this.errors.password = 'Password is required.';\n      }\n\n      // If there are validation errors, stop the login process\n      if (this.errors.mobile_or_email || this.errors.password) {\n        return;\n      }\n      try {\n        const response = await axios.post('/login', {\n          mobile_or_email: this.mobile_or_email,\n          password: this.password\n        });\n\n        // Assuming your server sends the token in the response\n        const token = response.data.token;\n\n        // Store the token securely (e.g., in local storage)\n        localStorage.setItem('token', token);\n\n        // Handle the response from the server, e.g., show a success message or redirect to another page\n        console.log('Login successful:', response.data);\n\n        // For example, redirect to the user's dashboard after a successful login\n        this.$router.push({\n          name: 'home'\n        });\n      } catch (error) {\n        console.error('Error logging in:', error);\n        // Handle the error, e.g., display an error message to the user\n      }\n\n      // Simulate an incorrect email or password for demonstration\n      if (this.mobile_or_email !== 'correct@email.com' || this.password !== 'correctpassword') {\n        this.errors.mobile_or_email = 'Mobile or Email is incorrect.';\n        this.errors.password = 'Password is incorrect.';\n        return;\n      }\n    },\n    async getUser() {\n      try {\n        const response = await axios.get('/getUser');\n\n        // Assuming the server responds with user data\n        const user = response.data.user;\n        console.log('User data:', user);\n      } catch (error) {\n        console.error('Error getting user data:', error);\n      }\n    },\n    createAccount() {\n      // Add your create account logic here\n      this.$router.push({\n        name: 'register'\n      });\n    },\n    logoClicked() {\n      this.$router.push({\n        name: 'home'\n      });\n    },\n    togglePassword() {\n      this.showPassword = !this.showPassword;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","mobile_or_email","password","errors","showPassword","methods","login","response","post","token","localStorage","setItem","console","log","$router","push","error","getUser","get","user","createAccount","logoClicked","togglePassword"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <q-form @submit.prevent=\"login\" class=\"row justify-center login-page\">\r\n    <div class=\"row col-6 one justify-center\">\r\n      <q-img src=\"@/assets/images/hiyas-banner.png\" class=\"q-mb-lg\" @click=\"logoClicked\" style=\"cursor: pointer;\" />\r\n    </div>\r\n    <div class=\"row col-6 two justify-center \">\r\n      <q-card class=\"login-card text-center\">\r\n        <q-card-section>\r\n          <q-input v-model=\"mobile_or_email\" outlined label=\"Mobile or Email\" dense debounce=\"300\"\r\n            :error=\"errors.mobile_or_email ? 'Mobile or Email is incorrect.' : false\" />\r\n          <q-input v-model=\"password\" :type=\"showPassword ? 'text' : 'password'\" outlined label=\"Password\" dense\r\n            debounce=\"300\" :error=\"errors.password ? 'Password is incorrect.' : false\">\r\n            <template v-slot:append>\r\n              <q-icon :name=\"showPassword ? 'visibility' : 'visibility_off'\" @click=\"togglePassword\"\r\n                style=\"cursor: pointer;\" />\r\n            </template>\r\n          </q-input>\r\n\r\n          <div class=\"error-message\">{{ errors.mobile_or_email }}</div>\r\n          <div class=\"error-message\">{{ errors.password }}</div>\r\n          <q-btn rounded color=\"primary\" label=\"Log in\" type=\"submit\" class=\"q-mt-md q-mb-sm\" style=\"width: 100%\" />\r\n          <q-space />\r\n          <a href=\"#\" class=\"q-mt-md text-caption\" style=\"text-decoration: none;\">Forgot Password?</a>\r\n        </q-card-section>\r\n        <div class=\"hr-container\">\r\n          <hr class=\"hr-line\">\r\n        </div>\r\n        <q-card-section>\r\n          <q-btn rounded color=\"green\" label=\"Create New Account\" @click=\"createAccount\" class=\"text-caption\"\r\n            style=\"width: 70%\" />\r\n        </q-card-section>\r\n      </q-card>\r\n    </div>\r\n  </q-form>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'login',\r\n  data() {\r\n    return {\r\n      mobile_or_email: '',\r\n      password: '',\r\n      errors: {\r\n        mobile_or_email: '',\r\n        password: '',\r\n      },\r\n      showPassword: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      // Clear previous error messages\r\n      this.errors.mobile_or_email = '';\r\n      this.errors.password = '';\r\n\r\n      // Perform validation\r\n      if (!this.mobile_or_email) {\r\n        this.errors.mobile_or_email = 'Mobile or Email is required.';\r\n      }\r\n\r\n      if (!this.password) {\r\n        this.errors.password = 'Password is required.';\r\n      }\r\n\r\n      // If there are validation errors, stop the login process\r\n      if (this.errors.mobile_or_email || this.errors.password) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post('/login', {\r\n          mobile_or_email: this.mobile_or_email,\r\n          password: this.password,\r\n        });\r\n\r\n        // Assuming your server sends the token in the response\r\n        const token = response.data.token;\r\n\r\n        // Store the token securely (e.g., in local storage)\r\n        localStorage.setItem('token', token);\r\n\r\n        // Handle the response from the server, e.g., show a success message or redirect to another page\r\n        console.log('Login successful:', response.data);\r\n\r\n        // For example, redirect to the user's dashboard after a successful login\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Error logging in:', error);\r\n        // Handle the error, e.g., display an error message to the user\r\n      }\r\n\r\n      // Simulate an incorrect email or password for demonstration\r\n      if (this.mobile_or_email !== 'correct@email.com' || this.password !== 'correctpassword') {\r\n        this.errors.mobile_or_email = 'Mobile or Email is incorrect.';\r\n        this.errors.password = 'Password is incorrect.';\r\n        return;\r\n      }\r\n    },\r\n    async getUser() {\r\n      try {\r\n        const response = await axios.get('/getUser');\r\n\r\n        // Assuming the server responds with user data\r\n        const user = response.data.user;\r\n        console.log('User data:', user);\r\n      } catch (error) {\r\n        console.error('Error getting user data:', error);\r\n      }\r\n    },\r\n    createAccount() {\r\n      // Add your create account logic here\r\n      this.$router.push({ name: 'register' });\r\n    },\r\n    logoClicked() {\r\n      this.$router.push({ name: 'home' });\r\n    },\r\n    togglePassword() {\r\n      this.showPassword = !this.showPassword;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-page {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #EFEFEF;\r\n}\r\n\r\n.login-card {\r\n  max-width: 400px;\r\n  width: 100%;\r\n}\r\n\r\n.create-account-card {\r\n  max-width: 300px;\r\n  width: 100%;\r\n}\r\n\r\n.hr-line {\r\n  border: 0;\r\n  border-top: 1px solid #ccc;\r\n  flex-grow: 1;\r\n  width: 80%;\r\n}\r\n\r\n.hr-container {\r\n  align-items: center;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  font-size: 0.75rem;\r\n  margin-top: 4px;\r\n}\r\n\r\n/* .one {\r\n  background-color: blue;\r\n} */\r\n</style>\r\n"],"mappings":";AAqCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;QACNF,eAAe,EAAE,EAAE;QACnBC,QAAQ,EAAE;MACZ,CAAC;MACDE,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ;MACA,IAAI,CAACH,MAAM,CAACF,eAAc,GAAI,EAAE;MAChC,IAAI,CAACE,MAAM,CAACD,QAAO,GAAI,EAAE;;MAEzB;MACA,IAAI,CAAC,IAAI,CAACD,eAAe,EAAE;QACzB,IAAI,CAACE,MAAM,CAACF,eAAc,GAAI,8BAA8B;MAC9D;MAEA,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;QAClB,IAAI,CAACC,MAAM,CAACD,QAAO,GAAI,uBAAuB;MAChD;;MAEA;MACA,IAAI,IAAI,CAACC,MAAM,CAACF,eAAc,IAAK,IAAI,CAACE,MAAM,CAACD,QAAQ,EAAE;QACvD;MACF;MAEA,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,QAAQ,EAAE;UAC1CP,eAAe,EAAE,IAAI,CAACA,eAAe;UACrCC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;;QAEF;QACA,MAAMO,KAAI,GAAIF,QAAQ,CAACP,IAAI,CAACS,KAAK;;QAEjC;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;;QAEpC;QACAG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,QAAQ,CAACP,IAAI,CAAC;;QAE/C;QACA,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC;UAAEhB,IAAI,EAAE;QAAO,CAAC,CAAC;MACrC,EAAE,OAAOiB,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzC;MACF;;MAEA;MACA,IAAI,IAAI,CAACf,eAAc,KAAM,mBAAkB,IAAK,IAAI,CAACC,QAAO,KAAM,iBAAiB,EAAE;QACvF,IAAI,CAACC,MAAM,CAACF,eAAc,GAAI,+BAA+B;QAC7D,IAAI,CAACE,MAAM,CAACD,QAAO,GAAI,wBAAwB;QAC/C;MACF;IACF,CAAC;IACD,MAAMe,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAMV,QAAO,GAAI,MAAMT,KAAK,CAACoB,GAAG,CAAC,UAAU,CAAC;;QAE5C;QACA,MAAMC,IAAG,GAAIZ,QAAQ,CAACP,IAAI,CAACmB,IAAI;QAC/BP,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEM,IAAI,CAAC;MACjC,EAAE,OAAOH,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDI,aAAaA,CAAA,EAAG;MACd;MACA,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC;QAAEhB,IAAI,EAAE;MAAW,CAAC,CAAC;IACzC,CAAC;IACDsB,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACP,OAAO,CAACC,IAAI,CAAC;QAAEhB,IAAI,EAAE;MAAO,CAAC,CAAC;IACrC,CAAC;IACDuB,cAAcA,CAAA,EAAG;MACf,IAAI,CAAClB,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}