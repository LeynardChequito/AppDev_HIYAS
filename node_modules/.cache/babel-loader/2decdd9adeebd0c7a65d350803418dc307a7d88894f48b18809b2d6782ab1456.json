{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"q-pa-md\"\n};\nexport function render(_ctx, _cache) {\n  const _component_q_td = _resolveComponent(\"q-td\");\n  const _component_q_tr = _resolveComponent(\"q-tr\");\n  const _component_q_table = _resolveComponent(\"q-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_q_table, {\n    rows: _ctx.info,\n    columns: _ctx.columns,\n    \"row-key\": \"id\"\n  }, {\n    body: _withCtx(props => [_createVNode(_component_q_tr, {\n      props: props,\n      onClick: $event => _ctx.handleRowClick(props.row)\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.columns, col => {\n        return _openBlock(), _createBlock(_component_q_td, {\n          key: col.name,\n          props: props\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(props.row[col.name]), 1 /* TEXT */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\", \"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"rows\", \"columns\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_q_table","rows","_ctx","info","columns","body","_withCtx","props","_component_q_tr","onClick","$event","handleRowClick","row","_Fragment","_renderList","col","_createBlock","_component_q_td","key","name"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Student\\Table.vue"],"sourcesContent":["\r\n<template>\r\n    <div class=\"q-pa-md\">\r\n        <q-table :rows=\"info\" :columns=\"columns\" row-key=\"id\">\r\n            <template v-slot:body=\"props\">\r\n                <q-tr :props=\"props\" @click=\"handleRowClick(props.row)\">\r\n                    <q-td v-for=\"col in columns\" :key=\"col.name\" :props=\"props\">\r\n                        {{ props.row[col.name] }}\r\n                    </q-td>\r\n                </q-tr>\r\n            </template>\r\n        </q-table>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\n\r\n// Define the columns outside the data method\r\nconst columns = [\r\n    { name: 'id_number', umber', align: 'left', field: 'id_number', sortable: true },\r\n    { name: 'lastname',  align: 'left', field: 'lastname', sortable: true },\r\n    { name: 'firstname',  align: 'left', field: 'firstname', sortable: true },\r\n    { name: 'birthday',  align: 'left', field: 'birthday', sortable: true },\r\n    { name: 'age',  align: 'left', field: 'age', sortable: true },\r\n    { name: 'gender',  align: 'left', field: 'gender', sortable: true },\r\n    { name: 'address',  align: 'left', field: 'address', sortable: true },\r\n    { name: 'contact_info', nfo', align: 'left', field: 'contact_info', sortable: true },\r\n    { name: 'guardian/parents', uardian', align: 'left', field: 'guardian/parents', sortable: true },\r\n    { name: 'school',  align: 'left', field: 'school', sortable: true },\r\n    { name: 'grade_level', evel', align: 'left', field: 'grade_level', sortable: true },\r\n    { name: 'coach',  align: 'left', field: 'coach', sortable: true },\r\n    { name: 'section',  align: 'left', field: 'section', sortable: true },\r\n    { name: 'sponsor',  align: 'left', field: 'sponsor', sortable: true },\r\n    { name: 'staff',  align: 'left', field: 'staff', sortable: true },\r\n    { name: 'fam_number', n Family', align: 'left', field: 'fam_num', sortable: true },\r\n    // Add more columns as needed\r\n];\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            info: [],\r\n        };\r\n    },\r\n    created() {\r\n        this.getInfo();\r\n    },\r\n    methods: {\r\n        async getInfo() {\r\n            try {\r\n                const response = await axios.get('getstudentdata');\r\n                this.info = response.data;\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        },\r\n        handleRowClick(row) {\r\n            // Assuming the id property is present in the row object\r\n            const id = row.id;\r\n\r\n            // Navigate to the new route\r\n            this.$router.push(`/reports/students/${id}`);\r\n        },\r\n    },\r\n\r\n    // Bind the columns to the component\r\n    computed: {\r\n        columns() {\r\n            return columns;\r\n        },\r\n    },\r\n};\r\n</script>\r\n  "],"mappings":";;EAESA,KAAK,EAAC;AAAS;;;;;uBAApBC,mBAAA,CAUM,OAVNC,UAUM,GATFC,YAAA,CAQUC,kBAAA;IARAC,IAAI,EAAEC,IAAA,CAAAC,IAAI;IAAGC,OAAO,EAAEF,IAAA,CAAAE,OAAO;IAAE,SAAO,EAAC;;IAC5BC,IAAI,EAAAC,QAAA,CAAEC,KAAK,KACxBR,YAAA,CAIOS,eAAA;MAJAD,KAAK,EAAEA,KAAK;MAAGE,OAAK,EAAAC,MAAA,IAAER,IAAA,CAAAS,cAAc,CAACJ,KAAK,CAACK,GAAG;;wBAC3C,MAAsB,E,kBAA5Bf,mBAAA,CAEOgB,SAAA,QAAAC,WAAA,CAFaZ,IAAA,CAAAE,OAAO,EAAdW,GAAG;6BAAhBC,YAAA,CAEOC,eAAA;UAFuBC,GAAG,EAAEH,GAAG,CAACI,IAAI;UAAGZ,KAAK,EAAEA;;4BACjD,MAAyB,C,kCAAtBA,KAAK,CAACK,GAAG,CAACG,GAAG,CAACI,IAAI,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}