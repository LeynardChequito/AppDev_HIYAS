{"ast":null,"code":"import { resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  const _component_q_item_section = _resolveComponent(\"q-item-section\");\n  const _component_q_item = _resolveComponent(\"q-item\");\n  const _component_q_list = _resolveComponent(\"q-list\");\n  const _component_q_card_section = _resolveComponent(\"q-card-section\");\n  const _component_q_card = _resolveComponent(\"q-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_q_btn, {\n    onClick: _cache[0] || (_cache[0] = $event => $options.toggleButton(1)),\n    class: _normalizeClass({\n      'clicked': $data.buttonClicked1\n    }),\n    label: $data.buttonLabel1,\n    ref: \"button1\"\n  }, null, 8 /* PROPS */, [\"class\", \"label\"]), _createVNode(_component_q_btn, {\n    onClick: _cache[1] || (_cache[1] = $event => $options.toggleButton(2)),\n    class: _normalizeClass({\n      'clicked': $data.buttonClicked2\n    }),\n    label: $data.buttonLabel2,\n    ref: \"button2\"\n  }, null, 8 /* PROPS */, [\"class\", \"label\"]), $data.buttonClicked1 || $data.buttonClicked2 ? (_openBlock(), _createBlock(_component_q_card, {\n    key: 0,\n    class: \"my-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_q_card_section, null, {\n      default: _withCtx(() => [_createVNode(_component_q_list, null, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.buttonClicked1 ? $data.items1 : $data.items2, (item, index) => {\n          return _openBlock(), _createBlock(_component_q_item, {\n            key: index,\n            clickable: \"\",\n            onClick: $event => $options.handleItemClick(item)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_q_item_section, null, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_q_btn","onClick","_cache","$event","$options","toggleButton","class","_normalizeClass","$data","buttonClicked1","label","buttonLabel1","ref","buttonClicked2","buttonLabel2","_createBlock","_component_q_card","_component_q_card_section","_component_q_list","_Fragment","_renderList","items1","items2","item","index","_component_q_item","key","clickable","handleItemClick","_component_q_item_section"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\views\\Experiment.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <q-btn @click=\"toggleButton(1)\" :class=\"{ 'clicked': buttonClicked1 }\" :label=\"buttonLabel1\" ref=\"button1\" />\r\n        <q-btn @click=\"toggleButton(2)\" :class=\"{ 'clicked': buttonClicked2 }\" :label=\"buttonLabel2\" ref=\"button2\" />\r\n        <q-card v-if=\"buttonClicked1 || buttonClicked2\" class=\"my-card\">\r\n            <q-card-section>\r\n                <q-list>\r\n                    <q-item v-for=\"(item, index) in (buttonClicked1 ? items1 : items2)\" :key=\"index\" clickable\r\n                        @click=\"handleItemClick(item)\">\r\n                        <q-item-section>\r\n                            {{ item }}\r\n                        </q-item-section>\r\n                    </q-item>\r\n                </q-list>\r\n            </q-card-section>\r\n        </q-card>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            buttonClicked1: false,\r\n            buttonClicked2: false,\r\n            buttonLabel1: 'Toggle Card 1',\r\n            buttonLabel2: 'Toggle Card 2',\r\n            items1: ['Item 1', 'Item 2', 'Item 3'], // List for button 1\r\n            items2: ['Item A', 'Item B', 'Item C'], // List for button 2\r\n        };\r\n    },\r\n    methods: {\r\n        toggleButton(buttonNumber) {\r\n            if (buttonNumber === 1) {\r\n                this.buttonClicked1 = !this.buttonClicked1;\r\n                this.buttonClicked2 = false;\r\n            } else if (buttonNumber === 2) {\r\n                this.buttonClicked2 = !this.buttonClicked2;\r\n                this.buttonClicked1 = false;\r\n            }\r\n            this.updateClickOutsideHandler();\r\n        },\r\n        updateClickOutsideHandler() {\r\n            if (this.buttonClicked1 || this.buttonClicked2) {\r\n                document.addEventListener('click', this.clickOutsideHandler);\r\n            } else {\r\n                document.removeEventListener('click', this.clickOutsideHandler);\r\n            }\r\n        },\r\n        clickOutsideHandler(event) {\r\n            if (this.$refs.button1 && this.$refs.button2) {\r\n                const buttonRect1 = this.$refs.button1.$el.getBoundingClientRect();\r\n                const buttonRect2 = this.$refs.button2.$el.getBoundingClientRect();\r\n                const isClickInsideButton1 = (\r\n                    event.clientX >= buttonRect1.left &&\r\n                    event.clientX <= buttonRect1.right &&\r\n                    event.clientY >= buttonRect1.top &&\r\n                    event.clientY <= buttonRect1.bottom\r\n                );\r\n                const isClickInsideButton2 = (\r\n                    event.clientX >= buttonRect2.left &&\r\n                    event.clientX <= buttonRect2.right &&\r\n                    event.clientY >= buttonRect2.top &&\r\n                    event.clientY <= buttonRect2.bottom\r\n                );\r\n\r\n                if (!isClickInsideButton1 && !isClickInsideButton2) {\r\n                    this.buttonClicked1 = false;\r\n                    this.buttonClicked2 = false;\r\n                    document.removeEventListener('click', this.clickOutsideHandler);\r\n                }\r\n            }\r\n        },\r\n        handleItemClick(item) {\r\n            // Handle item click logic here\r\n            console.log('Clicked:', item);\r\n        },\r\n    },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.clicked {\r\n    background-color: primary;\r\n    /* Change this to your desired \"clicked\" color */\r\n    color: white;\r\n    /* Text color when the button is \"clicked\" */\r\n}\r\n\r\n.my-card {\r\n    width: 300px;\r\n    /* Adjust the width as needed */\r\n    position: absolute;\r\n    top: 50px;\r\n    /* Adjust the positioning as needed */\r\n}\r\n</style>\r\n  "],"mappings":";;;;;;;;uBACIA,mBAAA,CAeM,cAdFC,YAAA,CAA6GC,gBAAA;IAArGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY;IAAMC,KAAK,EAAAC,eAAA;MAAA,WAAeC,KAAA,CAAAC;IAAc;IAAKC,KAAK,EAAEF,KAAA,CAAAG,YAAY;IAAEC,GAAG,EAAC;+CACjGb,YAAA,CAA6GC,gBAAA;IAArGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY;IAAMC,KAAK,EAAAC,eAAA;MAAA,WAAeC,KAAA,CAAAK;IAAc;IAAKH,KAAK,EAAEF,KAAA,CAAAM,YAAY;IAAEF,GAAG,EAAC;+CACnFJ,KAAA,CAAAC,cAAc,IAAID,KAAA,CAAAK,cAAc,I,cAA9CE,YAAA,CAWSC,iBAAA;;IAXuCV,KAAK,EAAC;;sBAClD,MASiB,CATjBP,YAAA,CASiBkB,yBAAA;wBARb,MAOS,CAPTlB,YAAA,CAOSmB,iBAAA;0BANG,MAA2D,E,kBAAnEpB,mBAAA,CAKSqB,SAAA,QAAAC,WAAA,CALwBZ,KAAA,CAAAC,cAAc,GAAGD,KAAA,CAAAa,MAAM,GAAGb,KAAA,CAAAc,MAAM,GAAjDC,IAAI,EAAEC,KAAK;+BAA3BT,YAAA,CAKSU,iBAAA;YAL4DC,GAAG,EAAEF,KAAK;YAAEG,SAAS,EAAT,EAAS;YACrF1B,OAAK,EAAAE,MAAA,IAAEC,QAAA,CAAAwB,eAAe,CAACL,IAAI;;8BAC5B,MAEiB,CAFjBxB,YAAA,CAEiB8B,yBAAA;gCADb,MAAU,C,kCAAPN,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}