{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FinanceF = _resolveComponent(\"FinanceF\");\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_FinanceF, {\n    modelValue: _ctx.selectedTimeframe,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedTimeframe = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" ApexCharts \"), _createVNode(_component_apexchart, {\n    height: \"400\",\n    type: \"line\",\n    options: _ctx.options,\n    series: _ctx.series\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_FinanceF","_ctx","selectedTimeframe","$event","_createCommentVNode","_component_apexchart","height","type","options","series"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\charts\\DonationsFin.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <FinanceF v-model=\"selectedTimeframe\" />\r\n      <!-- ApexCharts -->\r\n      <apexchart height=\"400\"  type=\"line\" :options=\"options\" :series=\"series\"></apexchart>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { defineComponent } from 'vue';\r\n  import FinanceF from '@/components/FinanceF.vue';\r\n  \r\n  export default defineComponent({\r\n    components: {\r\n      FinanceF,\r\n    },\r\n    data() {\r\n      return {\r\n        selectedTimeframe: 'weekly',\r\n        series: [],\r\n        options: {\r\n          title: {\r\n            text: 'Expense Trends',\r\n            fontSize: '40px',\r\n            align: 'left',\r\n          },\r\n          chart: {\r\n            id: 'apex-line-chart',\r\n          },\r\n          colors: ['#2E7D32', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107'],\r\n          markers: {\r\n            size: 4,\r\n            hover: {\r\n              sizeOffset: 6,\r\n            },\r\n          },\r\n          xaxis: {\r\n            categories: [\r\n              'Week 1', 'Week 2', 'Week 3', 'Week 4', 'Week 5',\r\n              'Week 6', 'Week 7', 'Week 8', 'Week 9', 'Week 10',\r\n            ], // Adjust based on your time periods\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: 'Expense Amount',\r\n            },\r\n          },\r\n          legend: {\r\n            show: true,\r\n            position: 'bottom',\r\n            horizontalAlign: 'center',\r\n            markers: {\r\n              fillColors: ['#2E7D32', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107'],\r\n            },\r\n          },\r\n          plotOptions: {\r\n            line: {\r\n              dataLabels: {\r\n                position: 'top',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n    },\r\n    created() {\r\n      this.updateSeriesData('weekly');\r\n    },\r\n    watch: {\r\n      selectedTimeframe(newTimeframe) {\r\n        this.updateSeriesData(newTimeframe);\r\n      },\r\n    },\r\n    methods: {\r\n      async updateSeriesData(timeframe) {\r\n        if (timeframe === 'weekly') {\r\n          this.series = [\r\n            { name: 'Education', data: [200, 150, 100, 50, 20, 30, 40, 50, 60, 70] },\r\n            { name: 'Health', data: [100, 120, 80, 40, 60, 30, 40, 50, 60, 70] },\r\n            { name: 'Recreation', data: [50, 60, 40, 20, 30, 10, 20, 30, 40, 50] },\r\n            { name: 'Food', data: [80, 100, 60, 30, 40, 20, 30, 40, 50, 60] },\r\n            { name: 'Miscellaneous', data: [30, 40, 20, 10, 15, 5, 10, 15, 20, 25] },\r\n          ];\r\n        } else if (timeframe === 'monthly') {\r\n          this.series = [\r\n            { name: 'Education', data: [800, 600, 400, 200, 80, 120, 180, 240, 300, 360] },\r\n            { name: 'Health', data: [400, 480, 320, 160, 240, 120, 180, 240, 300, 360] },\r\n            { name: 'Recreation', data: [200, 240, 160, 80, 120, 60, 90, 120, 150, 180] },\r\n            { name: 'Food', data: [320, 400, 240, 120, 160, 80, 120, 160, 200, 240] },\r\n            { name: 'Miscellaneous', data: [120, 160, 80, 40, 60, 30, 40, 50, 60, 70] },\r\n          ];\r\n        } else if (timeframe === 'quarterly') {\r\n          this.series = [\r\n            { name: 'Education', data: [1600, 1200, 800, 400, 160, 240, 360, 480, 600, 720] },\r\n            { name: 'Health', data: [800, 960, 640, 320, 480, 240, 360, 480, 600, 720] },\r\n            { name: 'Recreation', data: [400, 480, 320, 160, 240, 120, 180, 240, 300, 360] },\r\n            { name: 'Food', data: [640, 800, 480, 240, 320, 160, 240, 320, 400, 480] },\r\n            { name: 'Miscellaneous', data: [240, 320, 160, 80, 120, 60, 90, 120, 150, 180] },\r\n          ];\r\n        } else if (timeframe === 'yearly') {\r\n          this.series = [\r\n            { name: 'Education', data: [6400, 4800, 3200, 1600, 640, 960, 1440, 1920, 2400, 2880] },\r\n            { name: 'Health', data: [3200, 3840, 2560, 1280, 1920, 960, 1440, 1920, 2400, 2880] },\r\n            { name: 'Recreation', data: [1600, 1920, 1280, 640, 960, 480, 720, 960, 1200, 1440] },\r\n            { name: 'Food', data: [2560, 3200, 1920, 960, 1280, 640, 960, 1280, 1600, 1920] },\r\n            { name: 'Miscellaneous', data: [960, 1280, 640, 320, 480, 240, 360, 480, 600, 720] },\r\n          ];\r\n        }\r\n      },\r\n    },\r\n  });\r\n  </script>\r\n  "],"mappings":";;;;uBACIA,mBAAA,CAIM,cAHJC,YAAA,CAAwCC,mBAAA;gBAArBC,IAAA,CAAAC,iBAAiB;+DAAjBD,IAAA,CAAAC,iBAAiB,GAAAC,MAAA;2CACpCC,mBAAA,gBAAmB,EACnBL,YAAA,CAAqFM,oBAAA;IAA1EC,MAAM,EAAC,KAAK;IAAEC,IAAI,EAAC,MAAM;IAAEC,OAAO,EAAEP,IAAA,CAAAO,OAAO;IAAGC,MAAM,EAAER,IAAA,CAAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}