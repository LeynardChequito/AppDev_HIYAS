{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, \"Hello, \" + _toDisplayString(_ctx.userName), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","_ctx","userName"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\views\\Experiment.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Hello, {{ userName }}</h1>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userName: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserName();\r\n  },\r\n  methods: {\r\n    async fetchUserName() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if (token) {\r\n          // Set the Authorization header for the 'getUser' request\r\n          header = axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        } else {\r\n          // Handle the case when there is no token (e.g., redirect to login)\r\n          console.error('No token available.');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get('/getUser', headers{});\r\n\r\n        // Assuming the server responds with user data\r\n        const user = response.data.user;\r\n        this.userName = user.firstname; // Replace 'firstname' with the actual property name in your user data\r\n      } catch (error) {\r\n        console.error('Error getting user data:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Your component styles go here */\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAEM,cADJC,mBAAA,CAA8B,YAA1B,SAAO,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}