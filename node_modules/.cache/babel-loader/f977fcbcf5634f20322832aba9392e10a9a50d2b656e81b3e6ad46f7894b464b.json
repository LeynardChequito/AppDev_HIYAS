{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Chat = _resolveComponent(\"Chat\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Chat, {\n    messages: $data.messages,\n    onSendMessage: $options.handleSendMessage\n  }, null, 8 /* PROPS */, [\"messages\", \"onSendMessage\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_Chat","messages","$data","onSendMessage","$options","handleSendMessage"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\views\\ChatView.vue"],"sourcesContent":["<!-- ParentComponent.vue -->\r\n<template>\r\n  <div>\r\n    <Chat :messages=\"messages\" @send-message=\"handleSendMessage\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chat from '@/components/Chat.vue';\r\n\r\nexport default {\r\n  components: {\r\n    Chat,\r\n  },\r\n  data() {\r\n    return {\r\n      messages: [],\r\n    };\r\n  },\r\n  methods: {\r\n    handleSendMessage(newMessage) {\r\n      // Handle the new message and update the messages array\r\n      this.messages.push({\r\n        user: 'CurrentUser',\r\n        message: newMessage,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;uBAEEA,mBAAA,CAEM,cADJC,YAAA,CAA+DC,eAAA;IAAxDC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,aAAY,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}