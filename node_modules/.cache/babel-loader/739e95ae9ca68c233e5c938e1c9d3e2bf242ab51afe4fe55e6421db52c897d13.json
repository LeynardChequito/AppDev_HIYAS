{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.localMessages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id\n    }, _toDisplayString(message.user) + \": \" + _toDisplayString(message.message), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","localMessages","message","key","id","user","_toDisplayString"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\ChatWindow.vue"],"sourcesContent":["<!-- src/components/ChatWindow.vue -->\r\n\r\n<template>\r\n  <div>\r\n    <div v-for=\"message in localMessages\" :key=\"message.id\">\r\n      {{ message.user }}: {{ message.message }}\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: ['messages'],\r\n  data() {\r\n    return {\r\n      localMessages: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchMessages() {\r\n      const response = await axios.get('getMessage');\r\n      this.localMessages = response.data;\r\n    },\r\n    async sendMessage(message) {\r\n      await axios.post('sendMessage', { message });\r\n      this.fetchMessages(); // Refresh messages after sending\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchMessages();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;uBAGEA,mBAAA,CAKM,e,kBAJJA,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFiBC,KAAA,CAAAC,aAAa,EAAxBC,OAAO;yBAAnBL,mBAAA,CAEM;MAFiCM,GAAG,EAAED,OAAO,CAACE;wBAC/CF,OAAO,CAACG,IAAI,IAAG,IAAE,GAAAC,gBAAA,CAAGJ,OAAO,CAACA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}