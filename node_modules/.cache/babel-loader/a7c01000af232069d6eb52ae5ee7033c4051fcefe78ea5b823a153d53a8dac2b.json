{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-50623e9b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"row one justify-center\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"chat-card\"\n};\nconst _hoisted_3 = {\n  class: \"scrollable-list\"\n};\nconst _hoisted_4 = {\n  class: \"row\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row col-5 items-start q-pa-md\"\n}, \"Chats\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"row col-7 justify-end\"\n};\nconst _hoisted_7 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_icon = _resolveComponent(\"q-icon\");\n  const _component_q_badge = _resolveComponent(\"q-badge\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  const _component_q_separator = _resolveComponent(\"q-separator\");\n  const _component_q_avatar = _resolveComponent(\"q-avatar\");\n  const _component_q_item_section = _resolveComponent(\"q-item-section\");\n  const _component_q_item_label = _resolveComponent(\"q-item-label\");\n  const _component_q_item = _resolveComponent(\"q-item\");\n  const _component_q_list = _resolveComponent(\"q-list\");\n  const _component_q_card = _resolveComponent(\"q-card\");\n  const _directive_close_popup = _resolveDirective(\"close-popup\");\n  const _directive_ripple = _resolveDirective(\"ripple\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_q_btn, {\n    dense: \"\",\n    round: \"\",\n    color: $setup.buttonColor,\n    class: \"q-mr-md\",\n    onClick: $setup.toggleChat\n  }, {\n    default: _withCtx(() => [_createVNode(_component_q_icon, {\n      name: \"messages\",\n      style: {\n        \"color\": \"black\"\n      }\n    }), _createVNode(_component_q_badge, {\n      color: \"red\",\n      floating: \"\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"1\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"color\", \"onClick\"]), _createElementVNode(\"div\", _hoisted_1, [$setup.cardVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_q_card, {\n    bordered: \"\",\n    class: \"my-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_q_list, {\n      bordered: \"\",\n      class: \"rounded-borders\",\n      style: {\n        \"max-width\": \"350px\"\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createVNode(_component_q_btn, {\n        flat: \"\",\n        dense: \"\",\n        icon: \"fullscreen\"\n      }, null, 512 /* NEED_PATCH */), [[_directive_close_popup]])])]), _createVNode(_component_q_separator), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatItems, item => {\n        return _openBlock(), _createElementBlock(_Fragment, {\n          key: item.id\n        }, [_withDirectives((_openBlock(), _createBlock(_component_q_item, {\n          clickable: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_q_item_section, {\n            avatar: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_q_avatar, null, {\n              default: _withCtx(() => [_createElementVNode(\"img\", {\n                src: item.avatarSrc\n              }, null, 8 /* PROPS */, _hoisted_7)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_q_item_section, null, {\n            default: _withCtx(() => [_createVNode(_component_q_item_label, {\n              lines: \"1\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_q_item_label, {\n              caption: \"\",\n              lines: \"1\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.message), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_q_item_section, {\n            side: \"\",\n            top: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_q_item_label, {\n              caption: \"\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.time), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)), [[_directive_ripple]]), _createVNode(_component_q_separator)], 64 /* STABLE_FRAGMENT */);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    })])]),\n\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createVNode","_component_q_btn","dense","round","color","$setup","buttonColor","onClick","toggleChat","_component_q_icon","name","style","_component_q_badge","floating","_hoisted_1","cardVisible","_createElementBlock","_hoisted_2","_component_q_card","bordered","_hoisted_3","_component_q_list","_hoisted_4","_hoisted_5","_hoisted_6","flat","icon","_component_q_separator","_Fragment","_renderList","chatItems","item","id","_createBlock","_component_q_item","clickable","_component_q_item_section","avatar","_component_q_avatar","src","avatarSrc","_component_q_item_label","lines","caption","message","side","top","time"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Chats.vue"],"sourcesContent":["<template>\r\n    <q-btn dense round :color=\"buttonColor\" class=\"q-mr-md\" @click=\"toggleChat\">\r\n        <q-icon name=\"messages\" style=\"color: black;\" />\r\n        <q-badge color=\"red\" floating>1</q-badge>\r\n    </q-btn>\r\n\r\n    <div class=\"row one justify-center\">\r\n        <div class=\"chat-card\" v-if=\"cardVisible\">\r\n            <q-card bordered class=\"my-card\">\r\n                <div class=\"scrollable-list\">\r\n                    <q-list bordered class=\"rounded-borders\" style=\"max-width: 350px\">\r\n                        <div class=\"row\">\r\n                            <div class=\"row col-5 items-start q-pa-md\">Chats</div>\r\n                            <div class=\"row col-7 justify-end\">\r\n                                <q-btn flat dense icon=\"fullscreen\" v-close-popup />\r\n                            </div>\r\n                        </div>\r\n                        <q-separator />\r\n\r\n                        <template v-for=\"item in chatItems\" :key=\"item.id\">\r\n                            <q-item clickable v-ripple>\r\n                                <q-item-section avatar>\r\n                                    <q-avatar>\r\n                                        <img :src=\"item.avatarSrc\" />\r\n                                    </q-avatar>\r\n                                </q-item-section>\r\n\r\n                                <q-item-section>\r\n                                    <q-item-label lines=\"1\">{{ item.name }}</q-item-label>\r\n                                    <q-item-label caption lines=\"1\">{{ item.message }}</q-item-label>\r\n                                </q-item-section>\r\n\r\n                                <q-item-section side top>\r\n                                    <q-item-label caption>{{ item.time }}</q-item-label>\r\n                                </q-item-section>\r\n                            </q-item>\r\n                            <q-separator />\r\n                        </template>\r\n                    </q-list>\r\n                </div>\r\n            </q-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue';\r\n\r\n\r\nexport default {\r\n    setup() {\r\n        const cardVisible = ref(false);\r\n        const clicked = ref(false);\r\n\r\n        const toggleChat = () => {\r\n            cardVisible.value = !cardVisible.value;\r\n            clicked.value = !clicked.value; // Toggle the 'clicked' state\r\n        };\r\n\r\n        // Computed property to calculate button color based on 'clicked' state\r\n        const buttonColor = computed(() => (clicked.value ? 'grey' : '')); // Set to 'red' when clicked, else empty\r\n\r\n        const chatItems = Array.from({ length: 8 }, (_, index) => ({\r\n            id: index + 1,\r\n            name: 'Jan',\r\n            message: 'Can we schedule a call for tomorrow?',\r\n            time: '1 min',\r\n            avatarSrc: 'https://cdn.quasar.dev/img/avatar4.jpg',\r\n        }));\r\n\r\n        const handleGlobalClick = (event) => {\r\n            // Check if the clicked element is outside the button and the notification card\r\n            const isOutsideButton = !event.target.closest('.q-btn');\r\n            const isOutsideNotificationCard = !event.target.closest('.notification-card');\r\n\r\n            // Close the notification card if it's open and the click is outside both the button and the card\r\n            if (cardVisible.value && isOutsideButton && isOutsideNotificationCard) {\r\n                cardVisible.value = false;\r\n                clicked.value = false;\r\n            }\r\n        };\r\n\r\n        // Close the notification card when a global click event is emitted from another component\r\n        const closeNotificationCard = () => {\r\n            cardVisible.value = false;\r\n            clicked.value = false;\r\n        };\r\n\r\n        // Add and remove the global click event listener when the component is mounted and unmounted\r\n        onMounted(() => {\r\n            document.addEventListener('click', handleGlobalClick);\r\n        });\r\n\r\n        onBeforeUnmount(() => {\r\n            document.removeEventListener('click', handleGlobalClick);\r\n        });\r\n\r\n        // Listen for global events from other components\r\n        window.addEventListener('closeNotificationCard', closeNotificationCard);\r\n\r\n        return {\r\n            cardVisible,\r\n            toggleChat,\r\n            buttonColor, // Expose the computed 'buttonColor' to the template\r\n            chatItems,\r\n            handleGlobalClick\r\n        };\r\n    },\r\n};\r\n</script>\r\n  \r\n<style lang=\"sass\" scoped>\r\n  .my-card\r\n    width: 350px\r\n    max-width: 100%\r\n    color: black\r\n  \r\n  .scrollable-list\r\n    max-height: 450px \r\n    overflow-y: auto\r\n  \r\n  .one\r\n    background-color: black\r\n  \r\n  .chat-card\r\n    position: absolute\r\n    z-index: 1\r\n    top: 0\r\n    right: 0\r\n    margin-top: 55px\r\n    margin-right: 10px\r\n  </style>\r\n  "],"mappings":";;;EAMSA,KAAK,EAAC;AAAwB;;;EAC1BA,KAAK,EAAC;;;EAEEA,KAAK,EAAC;AAAiB;;EAEfA,KAAK,EAAC;AAAK;gEACZC,mBAAA,CAAsD;EAAjDD,KAAK,EAAC;AAA+B,GAAC,OAAK;;EAC3CA,KAAK,EAAC;AAAuB;;;;;;;;;;;;;;;6DAZ1DE,YAAA,CAGQC,gBAAA;IAHDC,KAAK,EAAL,EAAK;IAACC,KAAK,EAAL,EAAK;IAAEC,KAAK,EAAEC,MAAA,CAAAC,WAAW;IAAER,KAAK,EAAC,SAAS;IAAES,OAAK,EAAEF,MAAA,CAAAG;;sBAC5D,MAAgD,CAAhDR,YAAA,CAAgDS,iBAAA;MAAxCC,IAAI,EAAC,UAAU;MAACC,KAAqB,EAArB;QAAA;MAAA;QACxBX,YAAA,CAAyCY,kBAAA;MAAhCR,KAAK,EAAC,KAAK;MAACS,QAAQ,EAAR;;wBAAS,MAAC,C,iBAAD,GAAC,E;;;;;2CAGnCd,mBAAA,CAoCM,OApCNe,UAoCM,GAnC2BT,MAAA,CAAAU,WAAW,I,cAAxCC,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCFjB,YAAA,CAgCSkB,iBAAA;IAhCDC,QAAQ,EAAR,EAAQ;IAACrB,KAAK,EAAC;;sBACnB,MA8BM,CA9BNC,mBAAA,CA8BM,OA9BNqB,UA8BM,GA7BFpB,YAAA,CA4BSqB,iBAAA;MA5BDF,QAAQ,EAAR,EAAQ;MAACrB,KAAK,EAAC,iBAAiB;MAACa,KAAwB,EAAxB;QAAA;MAAA;;wBACrC,MAKM,CALNZ,mBAAA,CAKM,OALNuB,UAKM,GAJFC,UAAsD,EACtDxB,mBAAA,CAEM,OAFNyB,UAEM,G,gBADFxB,YAAA,CAAoDC,gBAAA;QAA7CwB,IAAI,EAAJ,EAAI;QAACvB,KAAK,EAAL,EAAK;QAACwB,IAAI,EAAC;uEAG/B1B,YAAA,CAAe2B,sBAAA,I,kBAEfX,mBAAA,CAkBWY,SAAA,QAAAC,WAAA,CAlBcxB,MAAA,CAAAyB,SAAS,EAAjBC,IAAI;;eAAqBA,IAAI,CAACC;2CAC3CC,YAAA,CAeSC,iBAAA;UAfDC,SAAS,EAAT;QAAS;4BACb,MAIiB,CAJjBnC,YAAA,CAIiBoC,yBAAA;YAJDC,MAAM,EAAN;UAAM;8BAClB,MAEW,CAFXrC,YAAA,CAEWsC,mBAAA;gCADP,MAA6B,CAA7BvC,mBAAA,CAA6B;gBAAvBwC,GAAG,EAAER,IAAI,CAACS;;;;;;wCAIxBxC,YAAA,CAGiBoC,yBAAA;8BAFb,MAAsD,CAAtDpC,YAAA,CAAsDyC,uBAAA;cAAxCC,KAAK,EAAC;YAAG;gCAAC,MAAe,C,kCAAZX,IAAI,CAACrB,IAAI,iB;;;0CACpCV,YAAA,CAAiEyC,uBAAA;cAAnDE,OAAO,EAAP,EAAO;cAACD,KAAK,EAAC;;gCAAI,MAAkB,C,kCAAfX,IAAI,CAACa,OAAO,iB;;;;;;wCAGnD5C,YAAA,CAEiBoC,yBAAA;YAFDS,IAAI,EAAJ,EAAI;YAACC,GAAG,EAAH;;8BACjB,MAAoD,CAApD9C,YAAA,CAAoDyC,uBAAA;cAAtCE,OAAO,EAAP;YAAO;gCAAC,MAAe,C,kCAAZZ,IAAI,CAACgB,IAAI,iB;;;;;;;;;+DAG1C/C,YAAA,CAAe2B,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}