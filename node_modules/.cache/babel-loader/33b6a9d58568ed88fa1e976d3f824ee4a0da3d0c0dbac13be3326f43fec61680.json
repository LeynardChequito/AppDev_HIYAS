{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      info: []\n    };\n  },\n  created() {\n    this.getInfo();\n  },\n  methods: {\n    async getInfo() {\n      try {\n        // Get the token from where you store it (localStorage, Vuex, etc.)\n        const token = localStorage.getItem('token');\n        // Check if the token is available\n        if (token) {\n          console.error('Token not found.');\n          // Handle the case where the token is not available (redirect to login, show an error, etc.)\n          return;\n        }\n        // Set the headers with the token\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        // Fetch user data with headers\n        const response = await axios.get('getUser', config);\n        this.info = response.data;\n      } catch (error) {\n        console.error('Error fetchinsg data:', error);\n        // Handle the error, e.g., redirect to login or show an error message to the user\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","info","created","getInfo","methods","token","localStorage","getItem","console","error","config","headers","Authorization","response","get"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\views\\Experiment.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"info\" v-for=\"inf in info\">\r\n    Welcome {{ inf.firstname }}!\r\n  </div>\r\n\r\n  <div v-else>\r\n    Loading...\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      info: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.getInfo();\r\n  },\r\n  methods: {\r\n    async getInfo() {\r\n      try {\r\n        // Get the token from where you store it (localStorage, Vuex, etc.)\r\n        const token = localStorage.getItem('token');\r\n        // Check if the token is available\r\n        if (token) {\r\n          console.error('Token not found.');\r\n          // Handle the case where the token is not available (redirect to login, show an error, etc.)\r\n          return;\r\n        }\r\n        // Set the headers with the token\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n        // Fetch user data with headers\r\n        const response = await axios.get('getUser', config);\r\n        this.info = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetchinsg data:', error);\r\n        // Handle the error, e.g., redirect to login or show an error message to the user\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAWA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,CAAC;EAChB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,OAAOA,CAAA,EAAG;MACd,IAAI;QACF;QACA,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C;QACA,IAAIF,KAAK,EAAE;UACTG,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;UACjC;UACA;QACF;QACA;QACA,MAAMC,MAAK,GAAI;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASP,KAAM;UACjC;QACF,CAAC;QACD;QACA,MAAMQ,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,SAAS,EAAEJ,MAAM,CAAC;QACnD,IAAI,CAACT,IAAG,GAAIY,QAAQ,CAACb,IAAI;MAC3B,EAAE,OAAOS,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C;MACF;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}