{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_td = _resolveComponent(\"q-td\");\n  const _component_q_tr = _resolveComponent(\"q-tr\");\n  const _component_q_table = _resolveComponent(\"q-table\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_q_table, {\n    rows: $data.info,\n    columns: $options.columns,\n    \"row-key\": \"id\"\n  }, {\n    body: _withCtx(props => [_createVNode(_component_q_tr, {\n      props: props\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.columns, col => {\n        return _openBlock(), _createBlock(_component_q_td, {\n          key: col.name,\n          props: props\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(props.row[col.name]), 1 /* TEXT */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"props\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"rows\", \"columns\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_q_table","rows","$data","info","columns","$options","body","_withCtx","props","_component_q_tr","_Fragment","_renderList","col","_createBlock","_component_q_td","key","name","row"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\views\\Experiment.vue"],"sourcesContent":["<!-- src/pages/TablePage.vue -->\r\n\r\n<template>\r\n    <div>\r\n      <q-table\r\n        :rows=\"info\"\r\n        :columns=\"columns\"\r\n        row-key=\"id\"\r\n      >\r\n        <template v-slot:body=\"props\">\r\n          <q-tr :props=\"props\">\r\n            <q-td\r\n              v-for=\"col in columns\"\r\n              :key=\"col.name\"\r\n              :props=\"props\"\r\n            >\r\n              {{ props.row[col.name] }}\r\n            </q-td>\r\n          </q-tr>\r\n        </template>\r\n      </q-table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import TryButton from '@/components/TryButton.vue';\r\n  \r\n  // Define the columns outside the data method\r\n  const columns = [\r\n    { name: 'id', label: 'ID', align: 'left', field: 'id' },\r\n    { name: 'name', label: 'Name', align: 'left', field: 'name' },\r\n    // Add more columns as needed\r\n  ];\r\n  \r\n  export default {\r\n    components: {\r\n      TryButton,\r\n    },\r\n    data() {\r\n      return {\r\n        info: [],\r\n      };\r\n    },\r\n    created() {\r\n      this.getInfo();\r\n    },\r\n    methods: {\r\n      async getInfo() {\r\n        try {\r\n          const response = await axios.get('getdata');\r\n          this.info = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n    },\r\n    // Bind the columns to the component\r\n    computed: {\r\n      columns() {\r\n        return columns;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;;;;uBAGIA,mBAAA,CAkBM,cAjBJC,YAAA,CAgBUC,kBAAA;IAfPC,IAAI,EAAEC,KAAA,CAAAC,IAAI;IACVC,OAAO,EAAEC,QAAA,CAAAD,OAAO;IACjB,SAAO,EAAC;;IAESE,IAAI,EAAAC,QAAA,CAAEC,KAAK,KAC1BT,YAAA,CAQOU,eAAA;MARAD,KAAK,EAAEA;IAAK;wBAEf,MAAsB,E,kBADxBV,mBAAA,CAMOY,SAAA,QAAAC,WAAA,CALSN,QAAA,CAAAD,OAAO,EAAdQ,GAAG;6BADZC,YAAA,CAMOC,eAAA;UAJJC,GAAG,EAAEH,GAAG,CAACI,IAAI;UACbR,KAAK,EAAEA;;4BAER,MAAyB,C,kCAAtBA,KAAK,CAACS,GAAG,CAACL,GAAG,CAACI,IAAI,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}