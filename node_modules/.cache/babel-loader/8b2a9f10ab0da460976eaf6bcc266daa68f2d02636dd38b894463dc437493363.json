{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FinanceF = _resolveComponent(\"FinanceF\");\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_FinanceF, {\n    modelValue: _ctx.selectedTimeframe,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedTimeframe = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" ApexCharts \"), _createVNode(_component_apexchart, {\n    height: \"300\",\n    type: \"radialBar\",\n    options: _ctx.options,\n    series: _ctx.series,\n    total: _ctx.totalSum\n  }, null, 8 /* PROPS */, [\"options\", \"series\", \"total\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_FinanceF","_ctx","selectedTimeframe","$event","_createCommentVNode","_component_apexchart","height","type","options","series","total","totalSum"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\charts\\SavingsFin.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <FinanceF v-model=\"selectedTimeframe\" />\r\n      <!-- ApexCharts -->\r\n      <apexchart height=\"300\" type=\"radialBar\" :options=\"options\" :series=\"series\" :total=\"totalSum\"></apexchart>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { defineComponent } from 'vue';\r\n  import FinanceF from '@/components/FinanceF.vue';\r\n  \r\n  export default defineComponent({\r\n    components: {\r\n      FinanceF,\r\n    },\r\n    data() {\r\n      return {\r\n        selectedTimeframe: 'weekly',\r\n        series: [],\r\n        totalSum: 0,\r\n        options: {\r\n          title: {\r\n            text: 'Savings Growth',\r\n            fontSize: '40px',\r\n            align: 'left',\r\n          },\r\n          chart: {\r\n            id: 'apex-radial-bar',\r\n          },\r\n          colors: ['#2E7D32', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107'],\r\n          markers: {\r\n            size: 4,\r\n            hover: {\r\n              sizeOffset: 6,\r\n            },\r\n          },\r\n          labels: ['Education', 'Health', 'Recreation', 'Food', 'Miscellaneous'],\r\n          legend: {\r\n            show: true,\r\n            position: 'bottom',\r\n            horizontalAlign: 'center',\r\n            markers: {\r\n              fillColors: ['#2E7D32', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107'],\r\n            },\r\n          },\r\n          plotOptions: {\r\n            radialBar: {\r\n              hollow: {\r\n                size: '50%',\r\n              },\r\n              dataLabels: {\r\n                name: {\r\n                  offsetY: -21,\r\n                  show: true,\r\n                  color: '#888',\r\n                  fontSize: '30px',\r\n                },\r\n                value: {\r\n                  offsetY: 0,\r\n                  fontSize: '40px',\r\n                  color: '#111',\r\n                  formatter: function (val) {\r\n                    return val;\r\n                  },\r\n                },\r\n                total: {\r\n                  show: true,\r\n                  label: 'TOTAL',\r\n                  color: '#888',\r\n                  formatter: function (w) {\r\n                    return `${w.globals.seriesTotals.reduce((a, b) => a + b, 0)}`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n          fill: {\r\n            colors: ['#2E7D32', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107'],\r\n          },\r\n        },\r\n      };\r\n    },\r\n    created() {\r\n      this.updateSeriesData('weekly');\r\n    },\r\n    watch: {\r\n      selectedTimeframe(newTimeframe) {\r\n        this.updateSeriesData(newTimeframe);\r\n      },\r\n    },\r\n    methods: {\r\n      async updateSeriesData(timeframe) {\r\n        if (timeframe === 'weekly') {\r\n          this.series = [200, 150, 100, 50, 20];\r\n        } else if (timeframe === 'monthly') {\r\n          this.series = [800, 600, 400, 200, 80];\r\n        } else if (timeframe === 'quarterly') {\r\n          this.series = [1600, 1200, 800, 400, 160];\r\n        } else if (timeframe === 'yearly') {\r\n          this.series = [6400, 4800, 3200, 1600, 640];\r\n        }\r\n  \r\n        this.totalSum = this.series.reduce((acc, val) => acc + val, 0);\r\n      },\r\n    },\r\n  });\r\n  </script>\r\n  "],"mappings":";;;;uBACIA,mBAAA,CAIM,cAHJC,YAAA,CAAwCC,mBAAA;gBAArBC,IAAA,CAAAC,iBAAiB;+DAAjBD,IAAA,CAAAC,iBAAiB,GAAAC,MAAA;2CACpCC,mBAAA,gBAAmB,EACnBL,YAAA,CAA2GM,oBAAA;IAAhGC,MAAM,EAAC,KAAK;IAACC,IAAI,EAAC,WAAW;IAAEC,OAAO,EAAEP,IAAA,CAAAO,OAAO;IAAGC,MAAM,EAAER,IAAA,CAAAQ,MAAM;IAAGC,KAAK,EAAET,IAAA,CAAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}