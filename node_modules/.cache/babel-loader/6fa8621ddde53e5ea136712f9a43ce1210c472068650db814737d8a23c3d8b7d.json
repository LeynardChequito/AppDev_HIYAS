{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nexport default {\n  data() {\n    return {\n      selectedMonth: '',\n      selectedYear: '',\n      selectedDate: '',\n      announcements: [\n        // Add other announcements here\n      ],\n      splitterModel: ref(50),\n      newAnnouncement: {\n        title: '',\n        date: '',\n        description: ''\n      }\n    };\n  },\n  computed: {\n    months() {\n      return [{\n        label: 'None',\n        value: 'None'\n      }, {\n        label: 'January',\n        value: '1'\n      }, {\n        label: 'February',\n        value: '2'\n      }, {\n        label: 'March',\n        value: '3'\n      }, {\n        label: 'April',\n        value: '4'\n      }, {\n        label: 'May',\n        value: '5'\n      }, {\n        label: 'June',\n        value: '6'\n      }, {\n        label: 'July',\n        value: '7'\n      }, {\n        label: 'August',\n        value: '8'\n      }, {\n        label: 'September',\n        value: '9'\n      }, {\n        label: 'October',\n        value: '10'\n      }, {\n        label: 'November',\n        value: '11'\n      }, {\n        label: 'December',\n        value: '12'\n      }];\n    },\n    years() {\n      const currentYear = new Date().getFullYear();\n      return Array.from({\n        length: 10\n      }, (_, index) => currentYear - index);\n    },\n    filteredAnnouncements() {\n      return this.announcements.map(announcement => ({\n        ...announcement,\n        date: this.formatDate(announcement.date)\n      }));\n    },\n    events() {\n      // Combine announcements and additional events\n      const allEvents = [...this.announcements];\n      // Add any additional events here if needed\n      allEvents.push({\n        id: 100,\n        title: 'Event 1',\n        date: '2023-11-20',\n        description: 'Description for Event 1'\n      }, {\n        id: 101,\n        title: 'Event 2',\n        date: '2023-11-22',\n        description: 'Description for Event 2'\n      });\n      return allEvents.map(event => event.date);\n    },\n    tabPanels() {\n      const uniqueDates = [...new Set(this.announcements.map(announcement => announcement.date))];\n      return uniqueDates.map(date => {\n        return {\n          date,\n          announcements: this.announcements.filter(announcement => announcement.date === date)\n        };\n      });\n    }\n  },\n  methods: {\n    addNewAnnouncement() {\n      // Validate the new announcement data\n      if (this.newAnnouncement.title && this.newAnnouncement.date && this.newAnnouncement.description) {\n        // Push the new announcement to the announcements array\n        this.announcements.push({\n          id: this.announcements.length + 1,\n          // or use a unique identifier\n          title: this.newAnnouncement.title,\n          date: this.newAnnouncement.date,\n          description: this.newAnnouncement.description\n        });\n\n        // Clear the form fields after adding the announcement\n        this.newAnnouncement = {\n          title: '',\n          date: '',\n          description: ''\n        };\n      }\n    },\n    formatDate(dateString) {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(dateString).toLocaleDateString('en-US', options);\n    }\n  }\n};","map":{"version":3,"names":["ref","data","selectedMonth","selectedYear","selectedDate","announcements","splitterModel","newAnnouncement","title","date","description","computed","months","label","value","years","currentYear","Date","getFullYear","Array","from","length","_","index","filteredAnnouncements","map","announcement","formatDate","events","allEvents","push","id","event","tabPanels","uniqueDates","Set","filter","methods","addNewAnnouncement","dateString","options","year","month","day","toLocaleDateString"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Announcements.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-container\">\r\n    <div class=\"left-panel\">\r\n      <!-- Centered Card -->\r\n      <q-card class=\"my-card\">\r\n        <q-card-section>\r\n          <div class=\"text-h3 text-center\">Announcements</div>\r\n        </q-card-section>\r\n\r\n        <q-separator />\r\n\r\n          <q-select\r\n          v-model=\"selectedMonth\"\r\n          :options=\"months\"\r\n          label=\"Filter by Month\"\r\n          outlined\r\n          >\r\n          </q-select>\r\n          <q-select\r\n            v-model=\"selectedYear\"\r\n            :options=\"years\"\r\n            label=\"Filter by Year\"\r\n            outlined\r\n          ></q-select>\r\n\r\n          <q-scroll-area style=\"height: 500px;\">\r\n            <q-timeline>\r\n              <q-timeline-entry\r\n    v-for=\"announcement in filteredAnnouncements\"\r\n    :key=\"announcement.id\"\r\n    :title=\"announcement.title\"\r\n    :subtitle=\"formatDate(announcement.date)\"\r\n  >\r\n    {{ announcement.description }}\r\n  </q-timeline-entry>\r\n            </q-timeline>\r\n          </q-scroll-area>\r\n      \r\n      </q-card>\r\n    </div>\r\n      <div class=\"bottom-right\">\r\n        <!-- Input Form for New Announcements -->\r\n        <div class=\"q-pa-md\">\r\n          <form @submit.prevent=\"addNewAnnouncement\">\r\n            <q-input v-model=\"newAnnouncement.title\" label=\"Title\" outlined />\r\n            <q-input v-model=\"newAnnouncement.date\" label=\"Date\" type=\"date\" outlined />\r\n            <div style=\"height: 500;\">\r\n              <q-input v-model=\"newAnnouncement.description\" label=\"Description\" outlined />\r\n            </div>\r\n            \r\n            <q-btn type=\"submit\" label=\"Add Announcement\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedMonth: '',\r\n      selectedYear: '',\r\n      selectedDate: '',\r\n      announcements: [\r\n        // Add other announcements here\r\n      ],\r\n      splitterModel: ref(50),\r\n      newAnnouncement: {\r\n        title: '',\r\n        date: '',\r\n        description: '',\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    months() {\r\n      return [\r\n        { label: 'None', value: 'None' },\r\n        { label: 'January', value: '1' },\r\n        { label: 'February', value: '2' },\r\n        { label: 'March', value: '3' },\r\n        { label: 'April', value: '4' },\r\n        { label: 'May', value: '5' },\r\n        { label: 'June', value: '6' },\r\n        { label: 'July', value: '7' },\r\n        { label: 'August', value: '8' },\r\n        { label: 'September', value: '9' },\r\n        { label: 'October', value: '10' },\r\n        { label: 'November', value: '11' },\r\n        { label: 'December', value: '12' },\r\n      ];\r\n    },\r\n    years() {\r\n      const currentYear = new Date().getFullYear();\r\n      return Array.from({ length: 10 }, (_, index) => currentYear - index);\r\n    },\r\n    filteredAnnouncements() {\r\n      return this.announcements.map((announcement) => ({\r\n        ...announcement,\r\n        date: this.formatDate(announcement.date),\r\n      }));\r\n    },\r\n    events() {\r\n      // Combine announcements and additional events\r\n      const allEvents = [...this.announcements];\r\n      // Add any additional events here if needed\r\n      allEvents.push(\r\n        { id: 100, title: 'Event 1', date: '2023-11-20', description: 'Description for Event 1' },\r\n        { id: 101, title: 'Event 2', date: '2023-11-22', description: 'Description for Event 2' },\r\n      );\r\n      return allEvents.map((event) => event.date);\r\n    },\r\n    tabPanels() {\r\n      const uniqueDates = [...new Set(this.announcements.map((announcement) => announcement.date))];\r\n      return uniqueDates.map((date) => {\r\n        return {\r\n          date,\r\n          announcements: this.announcements.filter((announcement) => announcement.date === date),\r\n        };\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    addNewAnnouncement() {\r\n      // Validate the new announcement data\r\n      if (\r\n        this.newAnnouncement.title &&\r\n        this.newAnnouncement.date &&\r\n        this.newAnnouncement.description\r\n      ) {\r\n        // Push the new announcement to the announcements array\r\n        this.announcements.push({\r\n          id: this.announcements.length + 1, // or use a unique identifier\r\n          title: this.newAnnouncement.title,\r\n          date: this.newAnnouncement.date,\r\n          description: this.newAnnouncement.description,\r\n        });\r\n\r\n        // Clear the form fields after adding the announcement\r\n        this.newAnnouncement = {\r\n          title: '',\r\n          date: '',\r\n          description: '',\r\n        };\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n      return new Date(dateString).toLocaleDateString('en-US', options);\r\n      }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.page-container {\r\n  display: flex;\r\n}\r\n\r\n.left-panel {\r\n  flex: 1;\r\n}\r\n\r\n.right-panel {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.top-right {\r\n  flex: 1;\r\n}\r\n\r\n.bottom-right {\r\n  flex: 1;\r\n  height: 350px; /* Adjust the height as needed */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}