{"ast":null,"code":"import axios from 'axios';\n\n// Define the columns outside the data method\nconst columns = [{\n  name: 'id_number',\n  label: 'Id Number',\n  align: 'left',\n  field: 'id_number'\n}, {\n  name: 'lastname',\n  label: 'Lastname',\n  align: 'left',\n  field: 'lastname'\n}\n// ... other columns\n];\n\nexport default {\n  data() {\n    return {\n      info: []\n    };\n  },\n  created() {\n    this.getInfo();\n  },\n  computed: {\n    // Use a computed property to filter info based on the id from the URL\n    filteredInfo() {\n      const studentId = this.$route.params.id;\n\n      // If the id is not available or info is empty, return an empty array\n      if (!studentId || this.info.length === 0) {\n        return [];\n      }\n\n      // Filter the info array to only include the student with the specified id\n      return this.info.filter(student => student.id === parseInt(studentId));\n    }\n  },\n  methods: {\n    async getInfo() {\n      try {\n        const response = await axios.get('getstudentdata');\n        this.info = response.data;\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n  },\n  // Bind the columns to the component\n  computed: {\n    columns() {\n      return columns;\n    }\n  }\n};","map":{"version":3,"names":["axios","columns","name","label","align","field","data","info","created","getInfo","computed","filteredInfo","studentId","$route","params","id","length","filter","student","parseInt","methods","response","get","error","console"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Student\\IndividualStudent.vue"],"sourcesContent":["<template>\r\n    adetails\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  // Define the columns outside the data method\r\n  const columns = [\r\n    { name: 'id_number', label: 'Id Number', align: 'left', field: 'id_number' },\r\n    { name: 'lastname', label: 'Lastname', align: 'left', field: 'lastname' },\r\n    // ... other columns\r\n  ];\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        info: [],\r\n      };\r\n    },\r\n    created() {\r\n      this.getInfo();\r\n    },\r\n    computed: {\r\n      // Use a computed property to filter info based on the id from the URL\r\n      filteredInfo() {\r\n        const studentId = this.$route.params.id;\r\n  \r\n        // If the id is not available or info is empty, return an empty array\r\n        if (!studentId || this.info.length === 0) {\r\n          return [];\r\n        }\r\n  \r\n        // Filter the info array to only include the student with the specified id\r\n        return this.info.filter(student => student.id === parseInt(studentId));\r\n      },\r\n    },\r\n    methods: {\r\n      async getInfo() {\r\n        try {\r\n          const response = await axios.get('getstudentdata');\r\n          this.info = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n    },\r\n    // Bind the columns to the component\r\n    computed: {\r\n      columns() {\r\n        return columns;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":"AAKE,OAAOA,KAAI,MAAO,OAAO;;AAEzB;AACA,MAAMC,OAAM,GAAI,CACd;EAAEC,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAY,CAAC,EAC5E;EAAEH,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAW;AACxE;AAAA,CACD;;AAED,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,CAAC;EAChB,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,YAAYA,CAAA,EAAG;MACb,MAAMC,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;;MAEvC;MACA,IAAI,CAACH,SAAQ,IAAK,IAAI,CAACL,IAAI,CAACS,MAAK,KAAM,CAAC,EAAE;QACxC,OAAO,EAAE;MACX;;MAEA;MACA,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACH,EAAC,KAAMI,QAAQ,CAACP,SAAS,CAAC,CAAC;IACxE;EACF,CAAC;EACDQ,OAAO,EAAE;IACP,MAAMX,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAMY,QAAO,GAAI,MAAMrB,KAAK,CAACsB,GAAG,CAAC,gBAAgB,CAAC;QAClD,IAAI,CAACf,IAAG,GAAIc,QAAQ,CAACf,IAAI;MAC3B,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;EACD;EACAb,QAAQ,EAAE;IACRT,OAAOA,CAAA,EAAG;MACR,OAAOA,OAAO;IAChB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}