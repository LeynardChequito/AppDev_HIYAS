{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/images/coach1.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-4e74976e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"q-pa-md row justify-center\"\n};\nconst _hoisted_2 = {\n  class: \"col-md-2 items-center text-center hey\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-8 heyq\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_img = _resolveComponent(\"q-img\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_q_img, {\n    width: \"50\",\n    height: \"50\",\n    \"scale-down\": \"\",\n    src: _imports_0\n  })]), _createElementVNode(\"div\", _hoisted_3, _toDisplayString($data.info.firsname), 1 /* TEXT */)]), _createElementVNode(\"div\", null, _toDisplayString($data.info.address), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","_hoisted_1","_hoisted_2","_createVNode","_component_q_img","width","height","src","_hoisted_3","_toDisplayString","$data","info","firsname","address"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Student\\IndividualStudent.vue"],"sourcesContent":["<template>\r\n    <div class=\"q-pa-md row justify-center\">\r\n        <div class=\"col-md-2 items-center text-center hey\">\r\n            <q-img width=\"50\" height=\"50\" scale-down src=\"@/assets/images/coach1.png\">\r\n            </q-img>\r\n\r\n        </div>\r\n        <div class=\"col-md-8 heyq\">\r\n            {{ info.firsname }}\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n    <div>{{ info.address }}</div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\n\r\n// Define the columns outside the data method\r\nconst columns = [\r\n    { name: 'id_number', label: 'Id Number', align: 'left', field: 'id_number' },\r\n    { name: 'lastname', label: 'Lastname', align: 'left', field: 'lastname' },\r\n    { name: 'firsname', label: 'Firsname', align: 'left', field: 'firsname' },\r\n    { name: 'age', label: 'Age', align: 'left', field: 'age' },\r\n    { name: 'birthday', label: 'Birthday', align: 'left', field: 'birthday' },\r\n    { name: 'gender', label: 'Gender', align: 'left', field: 'gender' },\r\n    { name: 'address', label: 'Address', align: 'left', field: 'address' },\r\n    { name: 'contact_info', label: 'Contact Info', align: 'left', field: 'contact_info' },\r\n    { name: 'guardian/parents', label: 'Parent/Guardian', align: 'left', field: 'guardian/parents' },\r\n    { name: 'coach', label: 'Coach', align: 'left', field: 'coach' },\r\n    { name: 'section', label: 'Section', align: 'left', field: 'section' },\r\n    { name: 'sponsor', label: 'Sponsor', align: 'left', field: 'sponsor' },\r\n    { name: 'staff', label: 'Staff', align: 'left', field: 'staff' },\r\n    // Add more columns as needed\r\n];\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            info: [],\r\n        };\r\n    },\r\n    created() {\r\n\r\n        this.getInfo();\r\n    },\r\n    methods: {\r\n        async getInfo() {\r\n            try {\r\n                // Get the id parameter from the URL\r\n                const studentId = parseInt(this.$route.params.id);\r\n\r\n                // Fetch data based on the id parameter\r\n                const response = await axios.get(`getstudentdata/${studentId}`);\r\n                this.info = response.data;\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        // No need for filteredInfo computed property since getInfo fetches data based on the id\r\n        // Bind the columns to the component\r\n        columns() {\r\n            return columns;\r\n        },\r\n    },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.hey{\r\n    background-color:green;\r\n}\r\n.hey{\r\n    background-color:green;\r\n}\r\n</style>"],"mappings":";OAGqDA,UAAgC;;;EAF5EC,KAAK,EAAC;AAA4B;;EAC9BA,KAAK,EAAC;AAAuC;;EAK7CA,KAAK,EAAC;AAAe;;;6DAN9BC,mBAAA,CAcM,OAdNC,UAcM,GAbFD,mBAAA,CAIM,OAJNE,UAIM,GAHFC,YAAA,CACQC,gBAAA;IADDC,KAAK,EAAC,IAAI;IAACC,MAAM,EAAC,IAAI;IAAC,YAAU,EAAV,EAAU;IAACC,GAAgC,EAAhCT;QAI7CE,mBAAA,CAEM,OAFNQ,UAEM,EAAAC,gBAAA,CADCC,KAAA,CAAAC,IAAI,CAACC,QAAQ,iB,GAQxBZ,mBAAA,CAA6B,aAAAS,gBAAA,CAArBC,KAAA,CAAAC,IAAI,CAACE,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}