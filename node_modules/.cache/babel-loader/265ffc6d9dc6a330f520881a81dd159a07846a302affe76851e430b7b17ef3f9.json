{"ast":null,"code":"import { ref, computed, onMounted, onBeforeUnmount } from 'vue';\nexport default {\n  setup() {\n    const cardVisible = ref(false);\n    const clicked = ref(false);\n    const accountClicked = () => {\n      cardVisible.value = !cardVisible.value;\n      clicked.value = !clicked.value;\n      // Toggle the 'clicked' state\n    };\n\n    const handleGlobalClick = event => {\n      // Check if the clicked element is outside the button and the notification card\n      const isOutsideButton = !event.target.closest('.q-btn');\n      const isOutsideNotificationCard = !event.target.closest('.notification-card');\n\n      // Close the notification card if it's open and the click is outside both the button and the card\n      if (cardVisible.value && isOutsideButton && isOutsideNotificationCard) {\n        cardVisible.value = false;\n        clicked.value = false;\n      }\n    };\n\n    // Close the notification card when a global click event is emitted from another component\n    const closeNotificationCard = () => {\n      cardVisible.value = false;\n      clicked.value = false;\n    };\n\n    // Add and remove the global click event listener when the component is mounted and unmounted\n    onMounted(() => {\n      document.addEventListener('click', handleGlobalClick);\n    });\n    onBeforeUnmount(() => {\n      document.removeEventListener('click', handleGlobalClick);\n    });\n\n    // Listen for global events from other components\n    window.addEventListener('closeNotificationCard', closeNotificationCard);\n\n    // Computed property to calculate button color based on 'clicked' state\n    const buttonColor = computed(() => {\n      return clicked.value ? 'grey' : ''; // Set to 'red' when clicked, else empty\n    });\n\n    return {\n      cardVisible,\n      accountClicked,\n      buttonColor,\n      handleGlobalClick,\n      // Expose the computed 'buttonColor' to the template\n      lorem: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","setup","cardVisible","clicked","accountClicked","value","handleGlobalClick","event","isOutsideButton","target","closest","isOutsideNotificationCard","closeNotificationCard","document","addEventListener","removeEventListener","window","buttonColor","lorem"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Account.vue"],"sourcesContent":["<template>\r\n    <q-btn dense round :color=\"buttonColor\" class=\"q-mr-md hays\" @click=\"accountClicked\">\r\n        <q-icon name=\"person\" style=\"color: black;\" />\r\n    </q-btn>\r\n\r\n    <div class=\"row one justify-center\">\r\n        <div class=\"account-card\" v-if=\"cardVisible\">\r\n            <q-card bordered class=\"my-card\" v-if=\"cardVisible\">\r\n                <div class=\"scrollable-list\">\r\n\r\n                    <q-list bordered class=\"rounded-borders\">\r\n\r\n                        <q-item clickable v-ripple>\r\n                            <q-item-section avatar>\r\n                                <q-avatar>\r\n                                    <img src=\"https://cdn.quasar.dev/img/avatar4.jpg\">\r\n                                </q-avatar>\r\n                            </q-item-section>\r\n\r\n                            <q-item-section>\r\n                                <q-item-label lines=\"1\">Jan Dyze Malaluan</q-item-label>\r\n                            </q-item-section>\r\n\r\n                        </q-item>\r\n\r\n                        <q-separator spaced />\r\n\r\n                        <q-item clickable v-ripple>\r\n                            <q-item-section avatar>\r\n                                <q-avatar color=\"grey\" text-color=\"white\" icon=\"settings\" />\r\n                            </q-item-section>\r\n\r\n                            <q-item-section>Settings</q-item-section>\r\n                            <q-item-section side>\r\n                                <q-icon name=\"chevron_right\" />\r\n                            </q-item-section>\r\n                        </q-item>\r\n\r\n                        <q-item clickable v-ripple>\r\n                            <q-item-section avatar>\r\n                                <q-avatar color=\"grey\" text-color=\"white\" icon=\"logout\" />\r\n                            </q-item-section>\r\n\r\n                            <q-item-section>Logout</q-item-section>\r\n                            <q-space />\r\n                            <q-item-section side>\r\n                                <q-icon name=\"chevron_right\" />\r\n                            </q-item-section>\r\n                        </q-item>\r\n\r\n\r\n                    </q-list>\r\n                </div>\r\n            </q-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue';\r\n\r\nexport default {\r\n    setup() {\r\n        const cardVisible = ref(false);\r\n        const clicked = ref(false);\r\n\r\n        const accountClicked = () => {\r\n            cardVisible.value = !cardVisible.value;\r\n            clicked.value = !clicked.value;\r\n            // Toggle the 'clicked' state\r\n        };\r\n        const handleGlobalClick = (event) => {\r\n            // Check if the clicked element is outside the button and the notification card\r\n            const isOutsideButton = !event.target.closest('.q-btn');\r\n            const isOutsideNotificationCard = !event.target.closest('.notification-card');\r\n\r\n            // Close the notification card if it's open and the click is outside both the button and the card\r\n            if (cardVisible.value && isOutsideButton && isOutsideNotificationCard) {\r\n                cardVisible.value = false;\r\n                clicked.value = false;\r\n            }\r\n        };\r\n\r\n        // Close the notification card when a global click event is emitted from another component\r\n        const closeNotificationCard = () => {\r\n            cardVisible.value = false;\r\n            clicked.value = false;\r\n        };\r\n\r\n        // Add and remove the global click event listener when the component is mounted and unmounted\r\n        onMounted(() => {\r\n            document.addEventListener('click', handleGlobalClick);\r\n        });\r\n\r\n        onBeforeUnmount(() => {\r\n            document.removeEventListener('click', handleGlobalClick);\r\n        });\r\n\r\n        // Listen for global events from other components\r\n        window.addEventListener('closeNotificationCard', closeNotificationCard);\r\n\r\n        // Computed property to calculate button color based on 'clicked' state\r\n        const buttonColor = computed(() => {\r\n            return clicked.value ? 'grey' : ''; // Set to 'red' when clicked, else empty\r\n        });\r\n\r\n        return {\r\n            cardVisible,\r\n            accountClicked,\r\n            buttonColor,\r\n            handleGlobalClick, // Expose the computed 'buttonColor' to the template\r\n            lorem: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n        };\r\n    },\r\n\r\n\r\n};\r\n\r\n</script>\r\n  \r\n<style lang=\"sass\" scoped>\r\n.my-card\r\n    width: 350px\r\n    max-width: 100%\r\n    color: black\r\n.scrollable-list\r\n    max-height: 450px \r\n    overflow-y: auto\r\n\r\n.one\r\n    background-color: black\r\n\r\n.account-card\r\n  position: absolute\r\n  z-index: 1\r\n  top: 0\r\n  right: 0\r\n  margin-top: 55px\r\n  margin-right: 10px\r\n.hays .icon\r\n    color: black\r\n</style>\r\n  \r\n\r\n\r\n  "],"mappings":"AA2DA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAc,QAAS,KAAK;AAE/D,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAMC,WAAU,GAAIL,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMM,OAAM,GAAIN,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMO,cAAa,GAAIA,CAAA,KAAM;MACzBF,WAAW,CAACG,KAAI,GAAI,CAACH,WAAW,CAACG,KAAK;MACtCF,OAAO,CAACE,KAAI,GAAI,CAACF,OAAO,CAACE,KAAK;MAC9B;IACJ,CAAC;;IACD,MAAMC,iBAAgB,GAAKC,KAAK,IAAK;MACjC;MACA,MAAMC,eAAc,GAAI,CAACD,KAAK,CAACE,MAAM,CAACC,OAAO,CAAC,QAAQ,CAAC;MACvD,MAAMC,yBAAwB,GAAI,CAACJ,KAAK,CAACE,MAAM,CAACC,OAAO,CAAC,oBAAoB,CAAC;;MAE7E;MACA,IAAIR,WAAW,CAACG,KAAI,IAAKG,eAAc,IAAKG,yBAAyB,EAAE;QACnET,WAAW,CAACG,KAAI,GAAI,KAAK;QACzBF,OAAO,CAACE,KAAI,GAAI,KAAK;MACzB;IACJ,CAAC;;IAED;IACA,MAAMO,qBAAoB,GAAIA,CAAA,KAAM;MAChCV,WAAW,CAACG,KAAI,GAAI,KAAK;MACzBF,OAAO,CAACE,KAAI,GAAI,KAAK;IACzB,CAAC;;IAED;IACAN,SAAS,CAAC,MAAM;MACZc,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAER,iBAAiB,CAAC;IACzD,CAAC,CAAC;IAEFN,eAAe,CAAC,MAAM;MAClBa,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAET,iBAAiB,CAAC;IAC5D,CAAC,CAAC;;IAEF;IACAU,MAAM,CAACF,gBAAgB,CAAC,uBAAuB,EAAEF,qBAAqB,CAAC;;IAEvE;IACA,MAAMK,WAAU,GAAInB,QAAQ,CAAC,MAAM;MAC/B,OAAOK,OAAO,CAACE,KAAI,GAAI,MAAK,GAAI,EAAE,EAAE;IACxC,CAAC,CAAC;;IAEF,OAAO;MACHH,WAAW;MACXE,cAAc;MACda,WAAW;MACXX,iBAAiB;MAAE;MACnBY,KAAK,EAAE;IACX,CAAC;EACL;AAGJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}