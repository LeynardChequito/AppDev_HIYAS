{"ast":null,"code":"export default {\n  data() {\n    return {\n      buttonClicked1: false,\n      buttonClicked2: false,\n      buttonLabel1: 'Toggle Card 1',\n      buttonLabel2: 'Toggle Card 2',\n      items1: ['Item 1', 'Item 2', 'Item 3'],\n      // List for button 1\n      items2: ['Item A', 'Item B', 'Item C'] // List for button 2\n    };\n  },\n\n  methods: {\n    toggleButton(buttonNumber) {\n      if (buttonNumber === 1) {\n        this.buttonClicked1 = !this.buttonClicked1;\n        this.buttonClicked2 = false;\n      } else if (buttonNumber === 2) {\n        this.buttonClicked2 = !this.buttonClicked2;\n        this.buttonClicked1 = false;\n      }\n      this.updateClickOutsideHandler();\n    },\n    updateClickOutsideHandler() {\n      if (this.buttonClicked1 || this.buttonClicked2) {\n        document.addEventListener('click', this.clickOutsideHandler);\n      } else {\n        document.removeEventListener('click', this.clickOutsideHandler);\n      }\n    },\n    clickOutsideHandler(event) {\n      if (this.$refs.button1 && this.$refs.button2) {\n        const buttonRect1 = this.$refs.button1.$el.getBoundingClientRect();\n        const buttonRect2 = this.$refs.button2.$el.getBoundingClientRect();\n        const isClickInsideButton1 = event.clientX >= buttonRect1.left && event.clientX <= buttonRect1.right && event.clientY >= buttonRect1.top && event.clientY <= buttonRect1.bottom;\n        const isClickInsideButton2 = event.clientX >= buttonRect2.left && event.clientX <= buttonRect2.right && event.clientY >= buttonRect2.top && event.clientY <= buttonRect2.bottom;\n        if (!isClickInsideButton1 && !isClickInsideButton2) {\n          this.buttonClicked1 = false;\n          this.buttonClicked2 = false;\n          document.removeEventListener('click', this.clickOutsideHandler);\n        }\n      }\n    },\n    handleItemClick(item) {\n      // Handle item click logic here\n      console.log('Clicked:', item);\n    }\n  }\n};","map":{"version":3,"names":["data","buttonClicked1","buttonClicked2","buttonLabel1","buttonLabel2","items1","items2","methods","toggleButton","buttonNumber","updateClickOutsideHandler","document","addEventListener","clickOutsideHandler","removeEventListener","event","$refs","button1","button2","buttonRect1","$el","getBoundingClientRect","buttonRect2","isClickInsideButton1","clientX","left","right","clientY","top","bottom","isClickInsideButton2","handleItemClick","item","console","log"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\views\\Experiment.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <q-btn @click=\"toggleButton(1)\" :class=\"{ 'clicked': buttonClicked1 }\" :label=\"buttonLabel1\" ref=\"button1\" />\r\n        <q-btn @click=\"toggleButton(2)\" :class=\"{ 'clicked': buttonClicked2 }\" :label=\"buttonLabel2\" ref=\"button2\" />\r\n        <q-card v-if=\"buttonClicked1 || buttonClicked2\" class=\"my-card\">\r\n            <q-card-section>\r\n                <q-list>\r\n                    <q-item v-for=\"(item, index) in (buttonClicked1 ? items1 : items2)\" :key=\"index\" clickable\r\n                        @click=\"handleItemClick(item)\">\r\n                        <q-item-section>\r\n                            {{ item }}\r\n                        </q-item-section>\r\n                    </q-item>\r\n                </q-list>\r\n            </q-card-section>\r\n        </q-card>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            buttonClicked1: false,\r\n            buttonClicked2: false,\r\n            buttonLabel1: 'Toggle Card 1',\r\n            buttonLabel2: 'Toggle Card 2',\r\n            items1: ['Item 1', 'Item 2', 'Item 3'], // List for button 1\r\n            items2: ['Item A', 'Item B', 'Item C'], // List for button 2\r\n        };\r\n    },\r\n    methods: {\r\n        toggleButton(buttonNumber) {\r\n            if (buttonNumber === 1) {\r\n                this.buttonClicked1 = !this.buttonClicked1;\r\n                this.buttonClicked2 = false;\r\n            } else if (buttonNumber === 2) {\r\n                this.buttonClicked2 = !this.buttonClicked2;\r\n                this.buttonClicked1 = false;\r\n            }\r\n            this.updateClickOutsideHandler();\r\n        },\r\n        updateClickOutsideHandler() {\r\n            if (this.buttonClicked1 || this.buttonClicked2) {\r\n                document.addEventListener('click', this.clickOutsideHandler);\r\n            } else {\r\n                document.removeEventListener('click', this.clickOutsideHandler);\r\n            }\r\n        },\r\n        clickOutsideHandler(event) {\r\n            if (this.$refs.button1 && this.$refs.button2) {\r\n                const buttonRect1 = this.$refs.button1.$el.getBoundingClientRect();\r\n                const buttonRect2 = this.$refs.button2.$el.getBoundingClientRect();\r\n                const isClickInsideButton1 = (\r\n                    event.clientX >= buttonRect1.left &&\r\n                    event.clientX <= buttonRect1.right &&\r\n                    event.clientY >= buttonRect1.top &&\r\n                    event.clientY <= buttonRect1.bottom\r\n                );\r\n                const isClickInsideButton2 = (\r\n                    event.clientX >= buttonRect2.left &&\r\n                    event.clientX <= buttonRect2.right &&\r\n                    event.clientY >= buttonRect2.top &&\r\n                    event.clientY <= buttonRect2.bottom\r\n                );\r\n\r\n                if (!isClickInsideButton1 && !isClickInsideButton2) {\r\n                    this.buttonClicked1 = false;\r\n                    this.buttonClicked2 = false;\r\n                    document.removeEventListener('click', this.clickOutsideHandler);\r\n                }\r\n            }\r\n        },\r\n        handleItemClick(item) {\r\n            // Handle item click logic here\r\n            console.log('Clicked:', item);\r\n        },\r\n    },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.clicked {\r\n    background-color: primary;\r\n    /* Change this to your desired \"clicked\" color */\r\n    color: white;\r\n    /* Text color when the button is \"clicked\" */\r\n}\r\n\r\n.my-card {\r\n    width: 300px;\r\n    /* Adjust the width as needed */\r\n    position: absolute;\r\n    top: 50px;\r\n    /* Adjust the positioning as needed */\r\n}\r\n</style>\r\n  "],"mappings":"AAoBA,eAAe;EACXA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,cAAc,EAAE,KAAK;MACrBC,cAAc,EAAE,KAAK;MACrBC,YAAY,EAAE,eAAe;MAC7BC,YAAY,EAAE,eAAe;MAC7BC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;MAAE;MACxCC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAE;IAC5C,CAAC;EACL,CAAC;;EACDC,OAAO,EAAE;IACLC,YAAYA,CAACC,YAAY,EAAE;MACvB,IAAIA,YAAW,KAAM,CAAC,EAAE;QACpB,IAAI,CAACR,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;QAC1C,IAAI,CAACC,cAAa,GAAI,KAAK;MAC/B,OAAO,IAAIO,YAAW,KAAM,CAAC,EAAE;QAC3B,IAAI,CAACP,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;QAC1C,IAAI,CAACD,cAAa,GAAI,KAAK;MAC/B;MACA,IAAI,CAACS,yBAAyB,CAAC,CAAC;IACpC,CAAC;IACDA,yBAAyBA,CAAA,EAAG;MACxB,IAAI,IAAI,CAACT,cAAa,IAAK,IAAI,CAACC,cAAc,EAAE;QAC5CS,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACC,mBAAmB,CAAC;MAChE,OAAO;QACHF,QAAQ,CAACG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACD,mBAAmB,CAAC;MACnE;IACJ,CAAC;IACDA,mBAAmBA,CAACE,KAAK,EAAE;MACvB,IAAI,IAAI,CAACC,KAAK,CAACC,OAAM,IAAK,IAAI,CAACD,KAAK,CAACE,OAAO,EAAE;QAC1C,MAAMC,WAAU,GAAI,IAAI,CAACH,KAAK,CAACC,OAAO,CAACG,GAAG,CAACC,qBAAqB,CAAC,CAAC;QAClE,MAAMC,WAAU,GAAI,IAAI,CAACN,KAAK,CAACE,OAAO,CAACE,GAAG,CAACC,qBAAqB,CAAC,CAAC;QAClE,MAAME,oBAAmB,GACrBR,KAAK,CAACS,OAAM,IAAKL,WAAW,CAACM,IAAG,IAChCV,KAAK,CAACS,OAAM,IAAKL,WAAW,CAACO,KAAI,IACjCX,KAAK,CAACY,OAAM,IAAKR,WAAW,CAACS,GAAE,IAC/Bb,KAAK,CAACY,OAAM,IAAKR,WAAW,CAACU,MAChC;QACD,MAAMC,oBAAmB,GACrBf,KAAK,CAACS,OAAM,IAAKF,WAAW,CAACG,IAAG,IAChCV,KAAK,CAACS,OAAM,IAAKF,WAAW,CAACI,KAAI,IACjCX,KAAK,CAACY,OAAM,IAAKL,WAAW,CAACM,GAAE,IAC/Bb,KAAK,CAACY,OAAM,IAAKL,WAAW,CAACO,MAChC;QAED,IAAI,CAACN,oBAAmB,IAAK,CAACO,oBAAoB,EAAE;UAChD,IAAI,CAAC7B,cAAa,GAAI,KAAK;UAC3B,IAAI,CAACC,cAAa,GAAI,KAAK;UAC3BS,QAAQ,CAACG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACD,mBAAmB,CAAC;QACnE;MACJ;IACJ,CAAC;IACDkB,eAAeA,CAACC,IAAI,EAAE;MAClB;MACAC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC;IACjC;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}