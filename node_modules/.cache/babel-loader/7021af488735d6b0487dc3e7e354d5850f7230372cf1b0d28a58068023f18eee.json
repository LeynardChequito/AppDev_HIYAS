{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\n\n// Define the columns outside the data method\nconst columns = [\n  // ... your column definitions\n];\nexport default {\n  data() {\n    return {\n      info: []\n    };\n  },\n  created() {\n    this.getInfo();\n  },\n  methods: {\n    async getInfo() {\n      try {\n        // Get the id parameter from the URL\n        const studentId = parseInt(this.$route.params.id);\n\n        // Fetch data based on the id parameter\n        const response = await axios.get(`getstudentdata/${studentId}`);\n        this.info = response.data;\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    },\n    handleRowClick(row) {\n      // Assuming the id property is present in the row object\n      const id = row.id;\n      console.log;\n      this.$router.push(`/reports/students/${id}`);\n    }\n  },\n  computed: {\n    // No need for filteredInfo computed property since getInfo fetches data based on the id\n    // Bind the columns to the component\n    columns() {\n      return columns;\n    }\n  }\n};","map":{"version":3,"names":["axios","columns","data","info","created","getInfo","methods","studentId","parseInt","$route","params","id","response","get","error","console","handleRowClick","row","log","$router","push","computed"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Student\\IndividualStudent.vue"],"sourcesContent":["<template>\r\n    <div class=\"q-pa-md\">\r\n      <q-table :rows=\"filteredInfo\" :columns=\"columns\" row-key=\"id\">\r\n        <template v-slot:body=\"props\">\r\n          <q-tr :props=\"props\" @click=\"handleRowClick(props.row)\">\r\n            <q-td v-for=\"col in columns\" :key=\"col.name\" :props=\"props\">\r\n              {{ props.row[col.name] }}\r\n            </q-td>\r\n          </q-tr>\r\n        </template>\r\n      </q-table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  // Define the columns outside the data method\r\n  const columns = [\r\n    // ... your column definitions\r\n  ];\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        info: [],\r\n      };\r\n    },\r\n    created() {\r\n      this.getInfo();\r\n    },\r\n    methods: {\r\n      async getInfo() {\r\n        try {\r\n          // Get the id parameter from the URL\r\n          const studentId = parseInt(this.$route.params.id);\r\n  \r\n          // Fetch data based on the id parameter\r\n          const response = await axios.get(`getstudentdata/${studentId}`);\r\n          this.info = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n      handleRowClick(row) {\r\n        // Assuming the id property is present in the row object\r\n        const id = row.id;\r\n  \r\n        console.log\r\n        this.$router.push(`/reports/students/${id}`);\r\n      },\r\n    },\r\n    computed: {\r\n      // No need for filteredInfo computed property since getInfo fetches data based on the id\r\n      // Bind the columns to the component\r\n      columns() {\r\n        return columns;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";AAeE,OAAOA,KAAI,MAAO,OAAO;;AAEzB;AACA,MAAMC,OAAM,GAAI;EACd;AAAA,CACD;AAED,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,CAAC;EAChB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,OAAOA,CAAA,EAAG;MACd,IAAI;QACF;QACA,MAAME,SAAQ,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;;QAEjD;QACA,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAE,kBAAiBN,SAAU,EAAC,CAAC;QAC/D,IAAI,CAACJ,IAAG,GAAIS,QAAQ,CAACV,IAAI;MAC3B,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDE,cAAcA,CAACC,GAAG,EAAE;MAClB;MACA,MAAMN,EAAC,GAAIM,GAAG,CAACN,EAAE;MAEjBI,OAAO,CAACG,GAAE;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAE,qBAAoBT,EAAG,EAAC,CAAC;IAC9C;EACF,CAAC;EACDU,QAAQ,EAAE;IACR;IACA;IACApB,OAAOA,CAAA,EAAG;MACR,OAAOA,OAAO;IAChB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}