{"ast":null,"code":"import { defineComponent } from 'vue';\nimport FinanceF from '@/components/FinanceF.vue';\nexport default defineComponent({\n  components: {\n    FinanceF\n  },\n  data() {\n    return {\n      selectedTimeframe: 'weekly',\n      series: [],\n      options: {\n        title: {\n          text: 'Expense Trends',\n          fontSize: '40px',\n          align: 'left'\n        },\n        chart: {\n          id: 'apex-line-chart'\n        },\n        colors: ['#2E7D32', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107'],\n        markers: {\n          size: 4,\n          hover: {\n            sizeOffset: 6\n          }\n        },\n        xaxis: {\n          categories: ['Week 1', 'Week 2', 'Week 3', 'Week 4', 'Week 5', 'Week 6', 'Week 7', 'Week 8', 'Week 9', 'Week 10'] // Adjust based on your time periods\n        },\n\n        yaxis: {\n          title: {\n            text: 'Expense Amount'\n          }\n        },\n        legend: {\n          show: true,\n          position: 'bottom',\n          horizontalAlign: 'center',\n          markers: {\n            fillColors: ['#2E7D32', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107']\n          }\n        },\n        plotOptions: {\n          line: {\n            dataLabels: {\n              position: 'top'\n            }\n          }\n        }\n      }\n    };\n  },\n  created() {\n    this.updateSeriesData('weekly');\n  },\n  watch: {\n    selectedTimeframe(newTimeframe) {\n      this.updateSeriesData(newTimeframe);\n    }\n  },\n  methods: {\n    async updateSeriesData(timeframe) {\n      if (timeframe === 'weekly') {\n        this.series = [{\n          name: 'Education',\n          data: [200, 150, 100, 50, 20, 30, 40, 50, 60, 70]\n        }, {\n          name: 'Health',\n          data: [100, 120, 80, 40, 60, 30, 40, 50, 60, 70]\n        }, {\n          name: 'Recreation',\n          data: [50, 60, 40, 20, 30, 10, 20, 30, 40, 50]\n        }, {\n          name: 'Food',\n          data: [80, 100, 60, 30, 40, 20, 30, 40, 50, 60]\n        }, {\n          name: 'Miscellaneous',\n          data: [30, 40, 20, 10, 15, 5, 10, 15, 20, 25]\n        }];\n      } else if (timeframe === 'monthly') {\n        this.series = [{\n          name: 'Education',\n          data: [800, 600, 400, 200, 80, 120, 180, 240, 300, 360]\n        }, {\n          name: 'Health',\n          data: [400, 480, 320, 160, 240, 120, 180, 240, 300, 360]\n        }, {\n          name: 'Recreation',\n          data: [200, 240, 160, 80, 120, 60, 90, 120, 150, 180]\n        }, {\n          name: 'Food',\n          data: [320, 400, 240, 120, 160, 80, 120, 160, 200, 240]\n        }, {\n          name: 'Miscellaneous',\n          data: [120, 160, 80, 40, 60, 30, 40, 50, 60, 70]\n        }];\n      } else if (timeframe === 'quarterly') {\n        this.series = [{\n          name: 'Education',\n          data: [1600, 1200, 800, 400, 160, 240, 360, 480, 600, 720]\n        }, {\n          name: 'Health',\n          data: [800, 960, 640, 320, 480, 240, 360, 480, 600, 720]\n        }, {\n          name: 'Recreation',\n          data: [400, 480, 320, 160, 240, 120, 180, 240, 300, 360]\n        }, {\n          name: 'Food',\n          data: [640, 800, 480, 240, 320, 160, 240, 320, 400, 480]\n        }, {\n          name: 'Miscellaneous',\n          data: [240, 320, 160, 80, 120, 60, 90, 120, 150, 180]\n        }];\n      } else if (timeframe === 'yearly') {\n        this.series = [{\n          name: 'Education',\n          data: [6400, 4800, 3200, 1600, 640, 960, 1440, 1920, 2400, 2880]\n        }, {\n          name: 'Health',\n          data: [3200, 3840, 2560, 1280, 1920, 960, 1440, 1920, 2400, 2880]\n        }, {\n          name: 'Recreation',\n          data: [1600, 1920, 1280, 640, 960, 480, 720, 960, 1200, 1440]\n        }, {\n          name: 'Food',\n          data: [2560, 3200, 1920, 960, 1280, 640, 960, 1280, 1600, 1920]\n        }, {\n          name: 'Miscellaneous',\n          data: [960, 1280, 640, 320, 480, 240, 360, 480, 600, 720]\n        }];\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","FinanceF","components","data","selectedTimeframe","series","options","title","text","fontSize","align","chart","id","colors","markers","size","hover","sizeOffset","xaxis","categories","yaxis","legend","show","position","horizontalAlign","fillColors","plotOptions","line","dataLabels","created","updateSeriesData","watch","newTimeframe","methods","timeframe","name"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\charts\\DonationsFin.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <FinanceF v-model=\"selectedTimeframe\" />\r\n      <!-- ApexCharts -->\r\n      <apexchart height=\"400\" width=\"600\" type=\"line\" :options=\"options\" :series=\"series\"></apexchart>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { defineComponent } from 'vue';\r\n  import FinanceF from '@/components/FinanceF.vue';\r\n  \r\n  export default defineComponent({\r\n    components: {\r\n      FinanceF,\r\n    },\r\n    data() {\r\n      return {\r\n        selectedTimeframe: 'weekly',\r\n        series: [],\r\n        options: {\r\n          title: {\r\n            text: 'Expense Trends',\r\n            fontSize: '40px',\r\n            align: 'left',\r\n          },\r\n          chart: {\r\n            id: 'apex-line-chart',\r\n          },\r\n          colors: ['#2E7D32', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107'],\r\n          markers: {\r\n            size: 4,\r\n            hover: {\r\n              sizeOffset: 6,\r\n            },\r\n          },\r\n          xaxis: {\r\n            categories: [\r\n              'Week 1', 'Week 2', 'Week 3', 'Week 4', 'Week 5',\r\n              'Week 6', 'Week 7', 'Week 8', 'Week 9', 'Week 10',\r\n            ], // Adjust based on your time periods\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: 'Expense Amount',\r\n            },\r\n          },\r\n          legend: {\r\n            show: true,\r\n            position: 'bottom',\r\n            horizontalAlign: 'center',\r\n            markers: {\r\n              fillColors: ['#2E7D32', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107'],\r\n            },\r\n          },\r\n          plotOptions: {\r\n            line: {\r\n              dataLabels: {\r\n                position: 'top',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n    },\r\n    created() {\r\n      this.updateSeriesData('weekly');\r\n    },\r\n    watch: {\r\n      selectedTimeframe(newTimeframe) {\r\n        this.updateSeriesData(newTimeframe);\r\n      },\r\n    },\r\n    methods: {\r\n      async updateSeriesData(timeframe) {\r\n        if (timeframe === 'weekly') {\r\n          this.series = [\r\n            { name: 'Education', data: [200, 150, 100, 50, 20, 30, 40, 50, 60, 70] },\r\n            { name: 'Health', data: [100, 120, 80, 40, 60, 30, 40, 50, 60, 70] },\r\n            { name: 'Recreation', data: [50, 60, 40, 20, 30, 10, 20, 30, 40, 50] },\r\n            { name: 'Food', data: [80, 100, 60, 30, 40, 20, 30, 40, 50, 60] },\r\n            { name: 'Miscellaneous', data: [30, 40, 20, 10, 15, 5, 10, 15, 20, 25] },\r\n          ];\r\n        } else if (timeframe === 'monthly') {\r\n          this.series = [\r\n            { name: 'Education', data: [800, 600, 400, 200, 80, 120, 180, 240, 300, 360] },\r\n            { name: 'Health', data: [400, 480, 320, 160, 240, 120, 180, 240, 300, 360] },\r\n            { name: 'Recreation', data: [200, 240, 160, 80, 120, 60, 90, 120, 150, 180] },\r\n            { name: 'Food', data: [320, 400, 240, 120, 160, 80, 120, 160, 200, 240] },\r\n            { name: 'Miscellaneous', data: [120, 160, 80, 40, 60, 30, 40, 50, 60, 70] },\r\n          ];\r\n        } else if (timeframe === 'quarterly') {\r\n          this.series = [\r\n            { name: 'Education', data: [1600, 1200, 800, 400, 160, 240, 360, 480, 600, 720] },\r\n            { name: 'Health', data: [800, 960, 640, 320, 480, 240, 360, 480, 600, 720] },\r\n            { name: 'Recreation', data: [400, 480, 320, 160, 240, 120, 180, 240, 300, 360] },\r\n            { name: 'Food', data: [640, 800, 480, 240, 320, 160, 240, 320, 400, 480] },\r\n            { name: 'Miscellaneous', data: [240, 320, 160, 80, 120, 60, 90, 120, 150, 180] },\r\n          ];\r\n        } else if (timeframe === 'yearly') {\r\n          this.series = [\r\n            { name: 'Education', data: [6400, 4800, 3200, 1600, 640, 960, 1440, 1920, 2400, 2880] },\r\n            { name: 'Health', data: [3200, 3840, 2560, 1280, 1920, 960, 1440, 1920, 2400, 2880] },\r\n            { name: 'Recreation', data: [1600, 1920, 1280, 640, 960, 480, 720, 960, 1200, 1440] },\r\n            { name: 'Food', data: [2560, 3200, 1920, 960, 1280, 640, 960, 1280, 1600, 1920] },\r\n            { name: 'Miscellaneous', data: [960, 1280, 640, 320, 480, 240, 360, 480, 600, 720] },\r\n          ];\r\n        }\r\n      },\r\n    },\r\n  });\r\n  </script>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}