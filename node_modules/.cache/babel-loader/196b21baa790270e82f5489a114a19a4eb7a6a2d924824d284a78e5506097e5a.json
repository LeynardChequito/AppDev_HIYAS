{"ast":null,"code":"import { toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createTextVNode(_toDisplayString($data.info.lastname) + \" \", 1 /* TEXT */), _createVNode(_component_q_btn, {\n    onClick: $options.checkData\n  }, null, 8 /* PROPS */, [\"onClick\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.info, inf => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: inf.id,\n      class: \"cover\"\n    }, _toDisplayString(inf.message), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","$data","info","lastname","_createVNode","_component_q_btn","onClick","$options","checkData","_Fragment","_renderList","inf","key","id","class","message"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\ChatWindow.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    {{ info.lastname }}\r\n    <q-btn @click=\"checkData\"></q-btn>\r\n    <div v-for=\"inf in info\" :key=\"inf.id\" class=\"cover\">\r\n      {{ inf.message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      info: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.getInfo();\r\n  },\r\n  methods: {\r\n    async getInfo() {\r\n      try {\r\n        // Retrieve the token from local storage or wherever it is stored\r\n        const token = localStorage.getItem('token');\r\n\r\n        // If the token exists, set the Authorization header\r\n        if (token) {\r\n          const headers = {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          };\r\n\r\n          const response = await axios.get('getUser', { headers });\r\n          this.info = response.data;\r\n        } else {\r\n          console.log('Token not found');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        console.log('Response:', error.response); // Add this line to see the response details\r\n      }\r\n    },\r\n    checkData() {\r\n      console.log(this.info);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cover {\r\n  background-color: blue;\r\n}\r\n</style>\r\n"],"mappings":";;;uBACEA,mBAAA,CAMM,c,kCALDC,KAAA,CAAAC,IAAI,CAACC,QAAQ,IAAG,GACnB,iBAAAC,YAAA,CAAkCC,gBAAA;IAA1BC,OAAK,EAAEC,QAAA,CAAAC;EAAS,uC,kBACxBR,mBAAA,CAEMS,SAAA,QAAAC,WAAA,CAFaT,KAAA,CAAAC,IAAI,EAAXS,GAAG;yBAAfX,mBAAA,CAEM;MAFoBY,GAAG,EAAED,GAAG,CAACE,EAAE;MAAEC,KAAK,EAAC;wBACxCH,GAAG,CAACI,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}