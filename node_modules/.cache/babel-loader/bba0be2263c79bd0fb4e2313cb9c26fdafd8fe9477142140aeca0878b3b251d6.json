{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  setup() {\n    const cardVisible = ref(false);\n    const clicked = ref(false);\n    const toggleNotification = () => {\n      cardVisible.value = !cardVisible.value;\n      clicked.value = !clicked.value; // Toggle the 'clicked' state\n    };\n\n    // Computed property to calculate button color based on 'clicked' state\n    const buttonColor = computed(() => clicked.value ? 'grey' : ''); // Set to 'red' when clicked, else empty\n\n    return {\n      cardVisible,\n      toggleNotification,\n      buttonColor,\n      // Expose the computed 'buttonColor' to the template\n      dialogVisible: ref(false)\n    };\n  },\n  methods: {\n    openDialog() {\n      this.dialogVisible = true;\n    },\n    closeDialog() {\n      this.dialogVisible = false;\n    }\n  }\n};","map":{"version":3,"names":["ref","computed","setup","cardVisible","clicked","toggleNotification","value","buttonColor","dialogVisible","methods","openDialog","closeDialog"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\TryButton.vue"],"sourcesContent":["<template>\r\n    <q-btn dense round :color=\"buttonColor\" class=\"q-mr-md no-shadow\" @click=\"toggleNotification\">\r\n      <q-icon name=\"widgets\" style=\"color: black;\" />\r\n      <q-badge color=\"red\" floating>4</q-badge>\r\n    </q-btn>\r\n  \r\n    <q-dialog v-if=\"cardVisible\" v-model=\"dialogVisible\" no-backdrop persistent @click:outside=\"closeDialog\">\r\n      <q-card>\r\n        <q-card-section>\r\n          <!-- Your dialog content here -->\r\n          <q-input label=\"Input inside dialog\" />\r\n        </q-card-section>\r\n  \r\n        <q-card-section align=\"right\">\r\n          <q-btn color=\"primary\" label=\"Close\" @click=\"closeDialog\" />\r\n        </q-card-section>\r\n      </q-card>\r\n    </q-dialog>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, computed } from 'vue';\r\n  \r\n  export default {\r\n    setup() {\r\n      const cardVisible = ref(false);\r\n      const clicked = ref(false);\r\n  \r\n      const toggleNotification = () => {\r\n        cardVisible.value = !cardVisible.value;\r\n        clicked.value = !clicked.value; // Toggle the 'clicked' state\r\n      };\r\n  \r\n      // Computed property to calculate button color based on 'clicked' state\r\n      const buttonColor = computed(() => (clicked.value ? 'grey' : '')); // Set to 'red' when clicked, else empty\r\n  \r\n      return {\r\n        cardVisible,\r\n        toggleNotification,\r\n        buttonColor, // Expose the computed 'buttonColor' to the template\r\n        dialogVisible: ref(false),\r\n      };\r\n    },\r\n    methods: {\r\n      openDialog() {\r\n        this.dialogVisible = true;\r\n      },\r\n      closeDialog() {\r\n        this.dialogVisible = false;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style lang=\"sass\" scoped>\r\n  .my-card\r\n    width: 350px\r\n    max-width: 100%\r\n    color: black\r\n  \r\n  .scrollable-list\r\n    max-height: 450px \r\n    overflow-y: auto\r\n  \r\n  .one\r\n    background-color: black\r\n  \r\n  .notification-card\r\n    position: absolute\r\n    z-index: 1\r\n    top: 0\r\n    right: 0\r\n    margin-top: 55px\r\n    margin-right: 10px\r\n  </style>\r\n  "],"mappings":"AAqBE,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AAEnC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,WAAU,GAAIH,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMI,OAAM,GAAIJ,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMK,kBAAiB,GAAIA,CAAA,KAAM;MAC/BF,WAAW,CAACG,KAAI,GAAI,CAACH,WAAW,CAACG,KAAK;MACtCF,OAAO,CAACE,KAAI,GAAI,CAACF,OAAO,CAACE,KAAK,EAAE;IAClC,CAAC;;IAED;IACA,MAAMC,WAAU,GAAIN,QAAQ,CAAC,MAAOG,OAAO,CAACE,KAAI,GAAI,MAAK,GAAI,EAAG,CAAC,EAAE;;IAEnE,OAAO;MACLH,WAAW;MACXE,kBAAkB;MAClBE,WAAW;MAAE;MACbC,aAAa,EAAER,GAAG,CAAC,KAAK;IAC1B,CAAC;EACH,CAAC;EACDS,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACF,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDG,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACH,aAAY,GAAI,KAAK;IAC5B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}