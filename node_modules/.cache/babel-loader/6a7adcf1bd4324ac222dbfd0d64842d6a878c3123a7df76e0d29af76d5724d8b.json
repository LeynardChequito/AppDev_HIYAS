{"ast":null,"code":"const columns = [{\n  name: 'name',\n  required: true,\n  label: 'Dessert (100g serving)',\n  align: 'left',\n  field: row => row.name,\n  format: val => `${val}`,\n  sortable: true\n}, {\n  name: 'calories',\n  align: 'center',\n  label: 'Calories',\n  field: 'calories',\n  sortable: true\n}, {\n  name: 'fat',\n  label: 'Fat (g)',\n  field: 'fat',\n  sortable: true\n}, {\n  name: 'carbs',\n  label: 'Carbs (g)',\n  field: 'carbs'\n}, {\n  name: 'protein',\n  label: 'Protein (g)',\n  field: 'protein'\n}, {\n  name: 'sodium',\n  label: 'Sodium (mg)',\n  field: 'sodium'\n}, {\n  name: 'calcium',\n  label: 'Calcium (%)',\n  field: 'calcium',\n  sortable: true,\n  sort: (a, b) => parseInt(a, 10) - parseInt(b, 10)\n}, {\n  name: 'iron',\n  label: 'Iron (%)',\n  field: 'iron',\n  sortable: true,\n  sort: (a, b) => parseInt(a, 10) - parseInt(b, 10)\n}];\nconst rows = [{\n  name: 'Frozen Yogurt',\n  calories: 159,\n  fat: 6.0,\n  carbs: 24,\n  protein: 4.0,\n  sodium: 87,\n  calcium: '14%',\n  iron: '1%'\n}, {\n  name: 'Ice cream sandwich',\n  calories: 237,\n  fat: 9.0,\n  carbs: 37,\n  protein: 4.3,\n  sodium: 129,\n  calcium: '8%',\n  iron: '1%'\n}, {\n  name: 'Eclair',\n  calories: 262,\n  fat: 16.0,\n  carbs: 23,\n  protein: 6.0,\n  sodium: 337,\n  calcium: '6%',\n  iron: '7%'\n}, {\n  name: 'Cupcake',\n  calories: 305,\n  fat: 3.7,\n  carbs: 67,\n  protein: 4.3,\n  sodium: 413,\n  calcium: '3%',\n  iron: '8%'\n}, {\n  name: 'Gingerbread',\n  calories: 356,\n  fat: 16.0,\n  carbs: 49,\n  protein: 3.9,\n  sodium: 327,\n  calcium: '7%',\n  iron: '16%'\n}, {\n  name: 'Jelly bean',\n  calories: 375,\n  fat: 0.0,\n  carbs: 94,\n  protein: 0.0,\n  sodium: 50,\n  calcium: '0%',\n  iron: '0%'\n}, {\n  name: 'Lollipop',\n  calories: 392,\n  fat: 0.2,\n  carbs: 98,\n  protein: 0,\n  sodium: 38,\n  calcium: '0%',\n  iron: '2%'\n}, {\n  name: 'Honeycomb',\n  calories: 408,\n  fat: 3.2,\n  carbs: 87,\n  protein: 6.5,\n  sodium: 562,\n  calcium: '0%',\n  iron: '45%'\n}, {\n  name: 'Donut',\n  calories: 452,\n  fat: 25.0,\n  carbs: 51,\n  protein: 4.9,\n  sodium: 326,\n  calcium: '2%',\n  iron: '22%'\n}, {\n  name: 'KitKat',\n  calories: 518,\n  fat: 26.0,\n  carbs: 65,\n  protein: 7,\n  sodium: 54,\n  calcium: '12%',\n  iron: '6%'\n}];\nexport default {\n  setup() {\n    return {\n      columns,\n      rows\n    };\n  }\n};","map":{"version":3,"names":["columns","name","required","label","align","field","row","format","val","sortable","sort","a","b","parseInt","rows","calories","fat","carbs","protein","sodium","calcium","iron","setup"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Student\\Table.vue"],"sourcesContent":["<template>\r\n    <div class=\"q-pa-md\">\r\n      <q-table\r\n        flat bordered\r\n        title=\"Treats\"\r\n        dense\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        row-key=\"name\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  const columns = [\r\n    {\r\n      name: 'name',\r\n      required: true,\r\n      label: 'Dessert (100g serving)',\r\n      align: 'left',\r\n      field: row => row.name,\r\n      format: val => `${val}`,\r\n      sortable: true\r\n    },\r\n    { name: 'calories', align: 'center', label: 'Calories', field: 'calories', sortable: true },\r\n    { name: 'fat', label: 'Fat (g)', field: 'fat', sortable: true },\r\n    { name: 'carbs', label: 'Carbs (g)', field: 'carbs' },\r\n    { name: 'protein', label: 'Protein (g)', field: 'protein' },\r\n    { name: 'sodium', label: 'Sodium (mg)', field: 'sodium' },\r\n    { name: 'calcium', label: 'Calcium (%)', field: 'calcium', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) },\r\n    { name: 'iron', label: 'Iron (%)', field: 'iron', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) }\r\n  ]\r\n  \r\n  const rows = [\r\n    {\r\n      name: 'Frozen Yogurt',\r\n      calories: 159,\r\n      fat: 6.0,\r\n      carbs: 24,\r\n      protein: 4.0,\r\n      sodium: 87,\r\n      calcium: '14%',\r\n      iron: '1%'\r\n    },\r\n    {\r\n      name: 'Ice cream sandwich',\r\n      calories: 237,\r\n      fat: 9.0,\r\n      carbs: 37,\r\n      protein: 4.3,\r\n      sodium: 129,\r\n      calcium: '8%',\r\n      iron: '1%'\r\n    },\r\n    {\r\n      name: 'Eclair',\r\n      calories: 262,\r\n      fat: 16.0,\r\n      carbs: 23,\r\n      protein: 6.0,\r\n      sodium: 337,\r\n      calcium: '6%',\r\n      iron: '7%'\r\n    },\r\n    {\r\n      name: 'Cupcake',\r\n      calories: 305,\r\n      fat: 3.7,\r\n      carbs: 67,\r\n      protein: 4.3,\r\n      sodium: 413,\r\n      calcium: '3%',\r\n      iron: '8%'\r\n    },\r\n    {\r\n      name: 'Gingerbread',\r\n      calories: 356,\r\n      fat: 16.0,\r\n      carbs: 49,\r\n      protein: 3.9,\r\n      sodium: 327,\r\n      calcium: '7%',\r\n      iron: '16%'\r\n    },\r\n    {\r\n      name: 'Jelly bean',\r\n      calories: 375,\r\n      fat: 0.0,\r\n      carbs: 94,\r\n      protein: 0.0,\r\n      sodium: 50,\r\n      calcium: '0%',\r\n      iron: '0%'\r\n    },\r\n    {\r\n      name: 'Lollipop',\r\n      calories: 392,\r\n      fat: 0.2,\r\n      carbs: 98,\r\n      protein: 0,\r\n      sodium: 38,\r\n      calcium: '0%',\r\n      iron: '2%'\r\n    },\r\n    {\r\n      name: 'Honeycomb',\r\n      calories: 408,\r\n      fat: 3.2,\r\n      carbs: 87,\r\n      protein: 6.5,\r\n      sodium: 562,\r\n      calcium: '0%',\r\n      iron: '45%'\r\n    },\r\n    {\r\n      name: 'Donut',\r\n      calories: 452,\r\n      fat: 25.0,\r\n      carbs: 51,\r\n      protein: 4.9,\r\n      sodium: 326,\r\n      calcium: '2%',\r\n      iron: '22%'\r\n    },\r\n    {\r\n      name: 'KitKat',\r\n      calories: 518,\r\n      fat: 26.0,\r\n      carbs: 65,\r\n      protein: 7,\r\n      sodium: 54,\r\n      calcium: '12%',\r\n      iron: '6%'\r\n    }\r\n  ]\r\n  \r\n  export default {\r\n    setup () {\r\n      return {\r\n        columns,\r\n        rows\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}