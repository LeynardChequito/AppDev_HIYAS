{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"q-pa-md\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_table = _resolveComponent(\"q-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_q_table, {\n    flat: \"\",\n    bordered: \"\",\n    title: \"Treats\",\n    dense: \"\",\n    rows: $setup.rows,\n    columns: $setup.columns,\n    \"row-key\": \"name\"\n  }, null, 8 /* PROPS */, [\"rows\", \"columns\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_q_table","flat","bordered","title","dense","rows","$setup","columns"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Student\\Table.vue"],"sourcesContent":["<template>\r\n    <div class=\"q-pa-md\">\r\n      <q-table\r\n        flat bordered\r\n        title=\"Treats\"\r\n        dense\r\n        :rows=\"rows\"\r\n        :columns=\"columns\"\r\n        row-key=\"name\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  const columns = [\r\n    {\r\n      name: 'name',\r\n      required: true,\r\n      label: 'Dessert (100g serving)',\r\n      align: 'left',\r\n      field: row => row.name,\r\n      format: val => `${val}`,\r\n      sortable: true\r\n    },\r\n    { name: 'calories', align: 'center', label: 'Calories', field: 'calories', sortable: true },\r\n    { name: 'fat', label: 'Fat (g)', field: 'fat', sortable: true },\r\n    { name: 'carbs', label: 'Carbs (g)', field: 'carbs' },\r\n    { name: 'protein', label: 'Protein (g)', field: 'protein' },\r\n    { name: 'sodium', label: 'Sodium (mg)', field: 'sodium' },\r\n    { name: 'calcium', label: 'Calcium (%)', field: 'calcium', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) },\r\n    { name: 'iron', label: 'Iron (%)', field: 'iron', sortable: true, sort: (a, b) => parseInt(a, 10) - parseInt(b, 10) }\r\n  ]\r\n  \r\n  const rows = [\r\n    {\r\n      name: 'Frozen Yogurt',\r\n      calories: 159,\r\n      fat: 6.0,\r\n      carbs: 24,\r\n      protein: 4.0,\r\n      sodium: 87,\r\n      calcium: '14%',\r\n      iron: '1%'\r\n    },\r\n    {\r\n      name: 'Ice cream sandwich',\r\n      calories: 237,\r\n      fat: 9.0,\r\n      carbs: 37,\r\n      protein: 4.3,\r\n      sodium: 129,\r\n      calcium: '8%',\r\n      iron: '1%'\r\n    },\r\n    {\r\n      name: 'Eclair',\r\n      calories: 262,\r\n      fat: 16.0,\r\n      carbs: 23,\r\n      protein: 6.0,\r\n      sodium: 337,\r\n      calcium: '6%',\r\n      iron: '7%'\r\n    },\r\n    {\r\n      name: 'Cupcake',\r\n      calories: 305,\r\n      fat: 3.7,\r\n      carbs: 67,\r\n      protein: 4.3,\r\n      sodium: 413,\r\n      calcium: '3%',\r\n      iron: '8%'\r\n    },\r\n    {\r\n      name: 'Gingerbread',\r\n      calories: 356,\r\n      fat: 16.0,\r\n      carbs: 49,\r\n      protein: 3.9,\r\n      sodium: 327,\r\n      calcium: '7%',\r\n      iron: '16%'\r\n    },\r\n    {\r\n      name: 'Jelly bean',\r\n      calories: 375,\r\n      fat: 0.0,\r\n      carbs: 94,\r\n      protein: 0.0,\r\n      sodium: 50,\r\n      calcium: '0%',\r\n      iron: '0%'\r\n    },\r\n    {\r\n      name: 'Lollipop',\r\n      calories: 392,\r\n      fat: 0.2,\r\n      carbs: 98,\r\n      protein: 0,\r\n      sodium: 38,\r\n      calcium: '0%',\r\n      iron: '2%'\r\n    },\r\n    {\r\n      name: 'Honeycomb',\r\n      calories: 408,\r\n      fat: 3.2,\r\n      carbs: 87,\r\n      protein: 6.5,\r\n      sodium: 562,\r\n      calcium: '0%',\r\n      iron: '45%'\r\n    },\r\n    {\r\n      name: 'Donut',\r\n      calories: 452,\r\n      fat: 25.0,\r\n      carbs: 51,\r\n      protein: 4.9,\r\n      sodium: 326,\r\n      calcium: '2%',\r\n      iron: '22%'\r\n    },\r\n    {\r\n      name: 'KitKat',\r\n      calories: 518,\r\n      fat: 26.0,\r\n      carbs: 65,\r\n      protein: 7,\r\n      sodium: 54,\r\n      calcium: '12%',\r\n      iron: '6%'\r\n    }\r\n  ]\r\n  \r\n  export default {\r\n    setup () {\r\n      return {\r\n        columns,\r\n        rows\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAS;;;uBAApBC,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAOEC,kBAAA;IANAC,IAAI,EAAJ,EAAI;IAACC,QAAQ,EAAR,EAAQ;IACbC,KAAK,EAAC,QAAQ;IACdC,KAAK,EAAL,EAAK;IACJC,IAAI,EAAEC,MAAA,CAAAD,IAAI;IACVE,OAAO,EAAED,MAAA,CAAAC,OAAO;IACjB,SAAO,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}