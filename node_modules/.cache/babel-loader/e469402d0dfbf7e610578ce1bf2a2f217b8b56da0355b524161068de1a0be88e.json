{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-da830be8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"page-container\"\n};\nconst _hoisted_2 = {\n  class: \"left-panel\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-h3 text-center\"\n}, \"Announcements\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"bottom-right\"\n};\nconst _hoisted_5 = {\n  class: \"q-pa-md\"\n};\nconst _hoisted_6 = {\n  style: {\n    \"height\": \"500\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_card_section = _resolveComponent(\"q-card-section\");\n  const _component_q_separator = _resolveComponent(\"q-separator\");\n  const _component_q_select = _resolveComponent(\"q-select\");\n  const _component_q_timeline_entry = _resolveComponent(\"q-timeline-entry\");\n  const _component_q_timeline = _resolveComponent(\"q-timeline\");\n  const _component_q_scroll_area = _resolveComponent(\"q-scroll-area\");\n  const _component_q_card = _resolveComponent(\"q-card\");\n  const _component_q_input = _resolveComponent(\"q-input\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Centered Card \"), _createVNode(_component_q_card, {\n    class: \"my-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_q_card_section, null, {\n      default: _withCtx(() => [_hoisted_3]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_q_separator), _createVNode(_component_q_select, {\n      modelValue: $data.selectedMonth,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedMonth = $event),\n      options: $options.months,\n      label: \"Filter by Month\",\n      outlined: \"\"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"options\"]), _createVNode(_component_q_select, {\n      modelValue: $data.selectedYear,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedYear = $event),\n      options: $options.years,\n      label: \"Filter by Year\",\n      outlined: \"\"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"options\"]), _createVNode(_component_q_scroll_area, {\n      style: {\n        \"height\": \"500px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_q_timeline, null, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredAnnouncements, announcement => {\n          return _openBlock(), _createBlock(_component_q_timeline_entry, {\n            key: announcement.id,\n            title: announcement.title,\n            subtitle: $options.formatDate(announcement.date)\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(announcement.description), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"title\", \"subtitle\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Input Form for New Announcements \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.addNewAnnouncement && $options.addNewAnnouncement(...args), [\"prevent\"]))\n  }, [_createVNode(_component_q_input, {\n    modelValue: $data.newAnnouncement.title,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newAnnouncement.title = $event),\n    label: \"Title\",\n    outlined: \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_q_input, {\n    modelValue: $data.newAnnouncement.date,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newAnnouncement.date = $event),\n    label: \"Date\",\n    type: \"date\",\n    outlined: \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_q_input, {\n    modelValue: $data.newAnnouncement.description,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newAnnouncement.description = $event),\n    label: \"Description\",\n    outlined: \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createVNode(_component_q_btn, {\n    type: \"submit\",\n    label: \"Add Announcement\"\n  })], 32 /* HYDRATE_EVENTS */)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_createVNode","_component_q_card","_component_q_card_section","_hoisted_3","_component_q_separator","_component_q_select","$data","selectedMonth","$event","options","$options","months","label","outlined","selectedYear","years","_component_q_scroll_area","_component_q_timeline","_Fragment","_renderList","filteredAnnouncements","announcement","_createBlock","_component_q_timeline_entry","key","id","title","subtitle","formatDate","date","description","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","args","addNewAnnouncement","_component_q_input","newAnnouncement","type","_hoisted_6","_component_q_btn"],"sources":["C:\\Users\\user\\OneDrive\\Desktop\\HiyasProject\\src\\components\\Announcements.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-container\">\r\n    <div class=\"left-panel\">\r\n      <!-- Centered Card -->\r\n      <q-card class=\"my-card\">\r\n        <q-card-section>\r\n          <div class=\"text-h3 text-center\">Announcements</div>\r\n        </q-card-section>\r\n\r\n        <q-separator />\r\n\r\n          <q-select\r\n          v-model=\"selectedMonth\"\r\n          :options=\"months\"\r\n          label=\"Filter by Month\"\r\n          outlined\r\n          >\r\n          </q-select>\r\n          <q-select\r\n            v-model=\"selectedYear\"\r\n            :options=\"years\"\r\n            label=\"Filter by Year\"\r\n            outlined\r\n          ></q-select>\r\n\r\n          <q-scroll-area style=\"height: 500px;\">\r\n            <q-timeline>\r\n              <q-timeline-entry\r\n    v-for=\"announcement in filteredAnnouncements\"\r\n    :key=\"announcement.id\"\r\n    :title=\"announcement.title\"\r\n    :subtitle=\"formatDate(announcement.date)\"\r\n  >\r\n    {{ announcement.description }}\r\n  </q-timeline-entry>\r\n            </q-timeline>\r\n          </q-scroll-area>\r\n      \r\n      </q-card>\r\n    </div>\r\n      <div class=\"bottom-right\">\r\n        <!-- Input Form for New Announcements -->\r\n        <div class=\"q-pa-md\">\r\n          <form @submit.prevent=\"addNewAnnouncement\">\r\n            <q-input v-model=\"newAnnouncement.title\" label=\"Title\" outlined />\r\n            <q-input v-model=\"newAnnouncement.date\" label=\"Date\" type=\"date\" outlined />\r\n            <div style=\"height: 500;\">\r\n              <q-input v-model=\"newAnnouncement.description\" label=\"Description\" outlined />\r\n            </div>\r\n            \r\n            <q-btn type=\"submit\" label=\"Add Announcement\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedMonth: '',\r\n      selectedYear: '',\r\n      selectedDate: '',\r\n      announcements: [\r\n        // Add other announcements here\r\n      ],\r\n      splitterModel: ref(50),\r\n      newAnnouncement: {\r\n        title: '',\r\n        date: '',\r\n        description: '',\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    months() {\r\n      return [\r\n        { label: 'None', value: 'None' },\r\n        { label: 'January', value: '1' },\r\n        { label: 'February', value: '2' },\r\n        { label: 'March', value: '3' },\r\n        { label: 'April', value: '4' },\r\n        { label: 'May', value: '5' },\r\n        { label: 'June', value: '6' },\r\n        { label: 'July', value: '7' },\r\n        { label: 'August', value: '8' },\r\n        { label: 'September', value: '9' },\r\n        { label: 'October', value: '10' },\r\n        { label: 'November', value: '11' },\r\n        { label: 'December', value: '12' },\r\n      ];\r\n    },\r\n    years() {\r\n      const currentYear = new Date().getFullYear();\r\n      return Array.from({ length: 10 }, (_, index) => currentYear - index);\r\n    },\r\n    filteredAnnouncements() {\r\n      return this.announcements.map((announcement) => ({\r\n        ...announcement,\r\n        date: this.formatDate(announcement.date),\r\n      }));\r\n    },\r\n    events() {\r\n      // Combine announcements and additional events\r\n      const allEvents = [...this.announcements];\r\n      // Add any additional events here if needed\r\n      allEvents.push(\r\n        { id: 100, title: 'Event 1', date: '2023-11-20', description: 'Description for Event 1' },\r\n        { id: 101, title: 'Event 2', date: '2023-11-22', description: 'Description for Event 2' },\r\n      );\r\n      return allEvents.map((event) => event.date);\r\n    },\r\n    tabPanels() {\r\n      const uniqueDates = [...new Set(this.announcements.map((announcement) => announcement.date))];\r\n      return uniqueDates.map((date) => {\r\n        return {\r\n          date,\r\n          announcements: this.announcements.filter((announcement) => announcement.date === date),\r\n        };\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    addNewAnnouncement() {\r\n      // Validate the new announcement data\r\n      if (\r\n        this.newAnnouncement.title &&\r\n        this.newAnnouncement.date &&\r\n        this.newAnnouncement.description\r\n      ) {\r\n        // Push the new announcement to the announcements array\r\n        this.announcements.push({\r\n          id: this.announcements.length + 1, // or use a unique identifier\r\n          title: this.newAnnouncement.title,\r\n          date: this.newAnnouncement.date,\r\n          description: this.newAnnouncement.description,\r\n        });\r\n\r\n        // Clear the form fields after adding the announcement\r\n        this.newAnnouncement = {\r\n          title: '',\r\n          date: '',\r\n          description: '',\r\n        };\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n      return new Date(dateString).toLocaleDateString('en-US', options);\r\n      }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.page-container {\r\n  display: flex;\r\n}\r\n\r\n.left-panel {\r\n  flex: 1;\r\n}\r\n\r\n.right-panel {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.top-right {\r\n  flex: 1;\r\n}\r\n\r\n.bottom-right {\r\n  flex: 1;\r\n  height: 350px; /* Adjust the height as needed */\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAY;gEAIjBC,mBAAA,CAAoD;EAA/CD,KAAK,EAAC;AAAqB,GAAC,eAAa;;EAkC7CA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAS;;EAIXE,KAAoB,EAApB;IAAA;EAAA;AAAoB;;;;;;;;;;;uBA7CnCC,mBAAA,CAqDQ,OArDRC,UAqDQ,GApDNH,mBAAA,CAqCM,OArCNI,UAqCM,GApCJC,mBAAA,mBAAsB,EACtBC,YAAA,CAkCSC,iBAAA;IAlCDR,KAAK,EAAC;EAAS;sBACrB,MAEiB,CAFjBO,YAAA,CAEiBE,yBAAA;wBADf,MAAoD,CAApDC,UAAoD,C;;QAGtDH,YAAA,CAAeI,sBAAA,GAEbJ,YAAA,CAMWK,mBAAA;kBALFC,KAAA,CAAAC,aAAa;iEAAbD,KAAA,CAAAC,aAAa,GAAAC,MAAA;MACrBC,OAAO,EAAEC,QAAA,CAAAC,MAAM;MAChBC,KAAK,EAAC,iBAAiB;MACvBC,QAAQ,EAAR;wDAGAb,YAAA,CAKYK,mBAAA;kBAJDC,KAAA,CAAAQ,YAAY;iEAAZR,KAAA,CAAAQ,YAAY,GAAAN,MAAA;MACpBC,OAAO,EAAEC,QAAA,CAAAK,KAAK;MACfH,KAAK,EAAC,gBAAgB;MACtBC,QAAQ,EAAR;wDAGFb,YAAA,CAWgBgB,wBAAA;MAXDrB,KAAsB,EAAtB;QAAA;MAAA;IAAsB;wBACnC,MASa,CATbK,YAAA,CASaiB,qBAAA;0BAPrB,MAA6C,E,kBADnCrB,mBAAA,CAOOsB,SAAA,QAAAC,WAAA,CANMT,QAAA,CAAAU,qBAAqB,EAArCC,YAAY;+BADTC,YAAA,CAOOC,2BAAA;YALhBC,GAAG,EAAEH,YAAY,CAACI,EAAE;YACpBC,KAAK,EAAEL,YAAY,CAACK,KAAK;YACzBC,QAAQ,EAAEjB,QAAA,CAAAkB,UAAU,CAACP,YAAY,CAACQ,IAAI;;8BAEvC,MAA8B,C,kCAA3BR,YAAY,CAACS,WAAW,iB;;;;;;;;;;;;;QAOzBpC,mBAAA,CAaM,OAbNqC,UAaM,GAZJhC,mBAAA,sCAAyC,EACzCL,mBAAA,CAUM,OAVNsC,UAUM,GATJtC,mBAAA,CAQO;IARAuC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAU1B,QAAA,CAAA2B,kBAAA,IAAA3B,QAAA,CAAA2B,kBAAA,IAAAD,IAAA,CAAkB;MACvCpC,YAAA,CAAkEsC,kBAAA;gBAAhDhC,KAAA,CAAAiC,eAAe,CAACb,KAAK;+DAArBpB,KAAA,CAAAiC,eAAe,CAACb,KAAK,GAAAlB,MAAA;IAAEI,KAAK,EAAC,OAAO;IAACC,QAAQ,EAAR;2CACvDb,YAAA,CAA4EsC,kBAAA;gBAA1DhC,KAAA,CAAAiC,eAAe,CAACV,IAAI;+DAApBvB,KAAA,CAAAiC,eAAe,CAACV,IAAI,GAAArB,MAAA;IAAEI,KAAK,EAAC,MAAM;IAAC4B,IAAI,EAAC,MAAM;IAAC3B,QAAQ,EAAR;2CACjEnB,mBAAA,CAEM,OAFN+C,UAEM,GADJzC,YAAA,CAA8EsC,kBAAA;gBAA5DhC,KAAA,CAAAiC,eAAe,CAACT,WAAW;+DAA3BxB,KAAA,CAAAiC,eAAe,CAACT,WAAW,GAAAtB,MAAA;IAAEI,KAAK,EAAC,aAAa;IAACC,QAAQ,EAAR;6CAGrEb,YAAA,CAAgD0C,gBAAA;IAAzCF,IAAI,EAAC,QAAQ;IAAC5B,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}